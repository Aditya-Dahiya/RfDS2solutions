---
title: "Chapter 20"
author: "Aditya Dahiya"
subtitle: "Joins"
date: 2023-10-02
execute: 
  echo: true
  warning: false
  error: false
  cache: true
filters:
  - social-share
share:
  permalink: "https://aditya-dahiya.github.io/RfDS2solutions/Chapter20.html"
  description: "Solutions: R for Data Science (2e)"
  twitter: true
  facebook: true
  linkedin: true
  email: true
editor_options: 
  chunk_output_type: console
bibliography: references.bib
---

# **20.2.4 Exercises**

## Question 1

**We forgot to draw the relationship between `weather` and `airports` in [Figure 20.1](https://r4ds.hadley.nz/joins#fig-flights-relationships). What is the relationship and how should it appear in the diagram?**

## Question 2

**`weather` only contains information for the three origin airports in NYC. If it contained weather records for all airports in the USA, what additional connection would it make to `flights`?**

## Question 3

**The `year`, `month`, `day`, `hour`, and `origin` variables almost form a compound key for `weather`, but there\'s one hour that has duplicate observations. Can you figure out what\'s special about that hour?**

## Question 4

**We know that some days of the year are special and fewer people than usual fly on them (e.g., Christmas eve and Christmas day). How might you represent that data as a data frame? What would be the primary key? How would it connect to the existing data frames?**

## Question 5

**Draw a diagram illustrating the connections between the `Batting`, `People`, and `Salaries` data frames in the Lahman package. Draw another diagram that shows the relationship between `People`, `Managers`, `AwardsManagers`. How would you characterize the relationship between the `Batting`, `Pitching`, and `Fielding` data frames?**

# **20.3.4 Exercises**

## Question 1

**Find the 48 hours (over the course of the whole year) that have the worst delays. Cross-reference it with the `weather` data. Can you see any patterns?**

## Question 2

**Imagine you\'ve found the top 10 most popular destinations using this code:**

```         
top_dest <- flights2 |>   count(dest, sort = TRUE) |>   head(10)
```

**How can you find all flights to those destinations?**

## Question 3

**Does every departing flight have corresponding weather data for that hour?**

## Question 4

**What do the tail numbers that don\'t have a matching record in `planes` have in common? (Hint: one variable explains \~90% of the problems.)**

## Question 5

**Add a column to `planes` that lists every `carrier` that has flown that plane. You might expect that there\'s an implicit relationship between plane and airline, because each plane is flown by a single airline. Confirm or reject this hypothesis using the tools you\'ve learned in previous chapters.**

## Question 6

**Add the latitude and the longitude of the origin *and* destination airport to `flights`. Is it easier to rename the columns before or after the join?**

## Question 7

**Compute the average delay by destination, then join on the `airports` data frame so you can show the spatial distribution of delays. Here\'s an easy way to draw a map of the United States:**

```         
airports |>   semi_join(flights, join_by(faa == dest)) |>   ggplot(aes(x = lon, y = lat)) +     borders("state") +     geom_point() +     coord_quickmap()
```

**You might want to use the `size` or `color` of the points to display the average delay for each airport.**

## Question 8

**What happened on June 13 2013? Draw a map of the delays, and then use Google to cross-reference with the weather.**

# **20.5.5 Exercises**

## Question 1

**Can you explain what\'s happening with the keys in this equi join? Why are they different?**

```         
x |> full_join(y, by = "key")
#> # A tibble: 4 × 3
#>     key val_x val_y
#>   <dbl> <chr> <chr>
#> 1     1 x1    y1   
#> 2     2 x2    y2   
#> 3     3 x3    <NA> 
#> 4     4 <NA>  y3

x |> full_join(y, by = "key", keep = TRUE)
#> # A tibble: 4 × 4
#>   key.x val_x key.y val_y
#>   <dbl> <chr> <dbl> <chr>
#> 1     1 x1        1 y1   
#> 2     2 x2        2 y2   
#> 3     3 x3       NA <NA> 
#> 4    NA <NA>      4 y3
```

## Question 2

**When finding if any party period overlapped with another party period we used `q < q` in the [`join_by()`](https://dplyr.tidyverse.org/reference/join_by.html)? Why? What happens if you remove this inequality?**
