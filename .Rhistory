sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free",
labeller = facet_labels)
temp = nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
)
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free",
labeller = facet_labels) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal()
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
?facet_wrap
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free",
labeller = labeller(facet_labels)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free",
labeller = labeller(facet_labels))
names(facet_labels) = c("FALSE", "TRUE")
temp = nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
)
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free",
labeller = labeller(facet_labels)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
temp = nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled")))
temp |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free",
labeller = labeller(facet_labels)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
?facet_wrap
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
# Create nice names for "cancelled" to show in the eventual plot
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free_y") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights")
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
# Create nice names for "cancelled" to show in the eventual plot
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free_y") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights") +
scale_x_continuous(breaks = seq(0, 24, 2))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
# Create nice names for "cancelled" to show in the eventual plot
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free_y") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights") +
scale_x_continuous(breaks = seq(0, 24, 4))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
# Create nice names for "cancelled" to show in the eventual plot
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free_y") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights") +
scale_x_continuous(breaks = seq(0, 24, 4))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
# Create nice names for "cancelled" to show in the eventual plot
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly() +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free_y") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights") +
scale_x_continuous(breaks = seq(0, 24, 4))
lwd = 1
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
# Create nice names for "cancelled" to show in the eventual plot
mutate(cancelled = as_factor(ifelse(cancelled,
"Cancelled Flights",
"Flights Not Cancelled"))) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(lwd = 1) +
theme_minimal() +
facet_wrap(~cancelled,
scales = "free_y") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Number of flights") +
scale_x_continuous(breaks = seq(0, 24, 4))
#| label: fig-q1-ex5.1
#| label: "Using missing data to draw inferences in exploratory data analysis"
gridExtra::grid.arrange(
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (prop_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = prop_cancelled*100)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Percentage of flights that were cancelled",
subtitle = "Percentage of cancelled flights over different scheduled departure times") +
theme_minimal(),
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(col = cancelled),
stat = "density",
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2)),
nrow = 2)
#| label: setup
#| echo: true
library(tidyverse)
library(gt)
#| label: fig-q1-ex5.1
#| label: "Using missing data to draw inferences in exploratory data analysis"
gridExtra::grid.arrange(
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (prop_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = prop_cancelled*100)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Percentage of flights that were cancelled",
subtitle = "Percentage of cancelled flights over different scheduled departure times") +
theme_minimal(),
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(col = cancelled),
stat = "density",
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2)),
nrow = 2)
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(col = cancelled),
stat = "density",
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(col = cancelled),
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time,
y = after_stat(density))) +
geom_freqpoly(aes(col = cancelled),
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time,
y = after_stat(density))) +
geom_freqpoly(aes(col = cancelled),
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min / 60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(col = cancelled),
stat = "density",
lwd = 1) +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Proportion of flights departed",
color = "Whether the flight was cancelled?",
subtitle = "Comparison of density frequency polygons of cancelled vs. non-cancelled flights") +
scale_x_continuous(breaks = seq(0,24, by = 2))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (prop_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = prop_cancelled*100)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Percentage of flights that were cancelled",
subtitle = "Percentage of cancelled flights over different scheduled departure times") +
theme_minimal()
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (prop_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = prop_cancelled*100)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
coord_cartesian(xlim = c(4,24)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Percentage of flights that were cancelled",
subtitle = "Percentage of cancelled flights over different scheduled departure times") +
theme_minimal()
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (perc_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = perc_cancelled)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
coord_cartesian(xlim = c(4,24)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Percentage of flights that were cancelled",
subtitle = "Percentage of cancelled flights over different scheduled departure times") +
theme_minimal()
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (prop_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = prop_cancelled*100)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
coord_cartesian(xlim = c(4, 24))
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100
) |>
group_by(sched_hour) |>
summarise(
cancelled = sum(cancelled),
total = n()
) |>
mutate (prop_cancelled = cancelled/total) |>
ggplot(aes(x = sched_hour,
y = prop_cancelled*100)) +
geom_line() +
geom_point() +
xlim(4,24) +
ylim(0, 5) +
scale_x_continuous(breaks = seq(4, 24, 2)) +
coord_cartesian(xlim = c(4, 24)) +
labs(x = "Scheduled Departure Time (in hrs)",
y = "Percentage of flights that were cancelled",
subtitle = "Percentage of cancelled flights over different scheduled departure times") +
theme_minimal()
