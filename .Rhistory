"Big Diamonds > 3.1 Carats"))) |>
ggplot(aes(x = price,
y = carat)) +
geom_point(aes(colour = big_c,
fill = big_c),
alpha = 0.5) +
geom_smooth(se = FALSE,
col = "black") +
theme_minimal() +
labs(x = "Price (in $)",
y = "Carats") +
coord_flip() +
facet_wrap(~big_c,
ncol = 2,
scales = "free_x") +
theme(legend.title = element_blank(),
legend.position = "bottom")
diamonds |>
filter(x >= 4) |>
ggplot(aes(x = x, y = y)) +
geom_point() +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
diamonds |>
filter(x >= 4) |>
ggplot(aes(y = y)) +
geom_boxplot(aes(group = cut_width(x, width = 1)))
diamonds |>
filter(x >= 4) |>
ggplot(aes(x = x, y = y)) +
geom_point()
diamonds |>
filter(x >= 4) |>
ggplot(aes(y = y)) +
geom_boxplot(aes(group = cut_width(x, width = 1))) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
diamonds |>
filter(x >= 4) |>
ggplot(aes(y = y)) +
geom_boxplot(aes(group = cut_width(x, width = 1)))
cut_width(diamonds$x, width = 1)
cut_width(diamonds$x, width = 1) |> count()
cut_width(diamonds$x, width = 1) |> summary()
diamonds |>
filter(x >= 4) |>
ggplot(aes(x = y)) +
geom_boxplot(aes(group = cut_width(x, width = 1)))
diamonds |>
filter(x >= 4) |>
ggplot(aes(x = y)) +
geom_boxplot(aes(group = cut_width(x, width = 1)))
diamonds |>
filter(x >= 4) |>
ggplot(aes(y = y)) +
geom_boxplot(aes(group = cut_width(x, width = 1))) +
coord_cartesian(ylim = c(4, 11))
diamonds |>
filter(x >= 4) |>
mutate(x_group = cut_width(x, width = 1)) |>
ggplot(aes(y = y, x = x_group)) +
geom_boxplot() +
coord_cartesian(ylim = c(4, 11))
diamonds |>
filter(x >= 4) |>
ggplot(aes(x = x, y = y)) +
geom_point(alpha = 0.2) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
diamonds |>
filter(x >= 4)
diamonds |>
filter(x >= 4) |>
mutate(x_group = cut_width(x, width = 1)) |>
ggplot(aes(y = y, x = x_group)) +
geom_boxplot() +
coord_cartesian(ylim = c(4, 11))
lm(diamonds$y ~ diamonds$x)
lm(diamonds$y ~ diamonds$x) |>
names()
lm(diamonds$y ~ diamonds$x)$residuals
lm(diamonds$y ~ diamonds$x)$residuals |> summary()
lm(diamonds$y ~ diamonds$x)$residuals > 1 | lm(diamonds$y ~ diamonds$x)$residuals < 1
(lm(diamonds$y ~ diamonds$x)$residuals > 1 | lm(diamonds$y ~ diamonds$x)$residuals < 1) >| summary()
(lm(diamonds$y ~ diamonds$x)$residuals > 1 | lm(diamonds$y ~ diamonds$x)$residuals < 1) |> summary()
diamonds |>
filter(x >= 4) |>
mutate(x_group = cut_width(x, width = 1)) |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals))
diamonds |>
mutate(x_group = cut_width(x, width = 1)) |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4)
diamonds |>
mutate(x_group = cut_width(x, width = 1)) |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm > 1 | res_lm < 1)
diamonds |>
mutate(x_group = cut_width(x, width = 1)) |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1)
diamonds |>
mutate(x_group = cut_width(x, width = 1)) |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
summarize(n = sum(res_lm))
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
ggplot(aes(x = x,
y = y,
col = res_lm)) +
geom_point(alpha = 0.2) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1)
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
rowid_to_column()
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
rowid_to_column() |>
mutate(rowid = ifelse(res_lm, rowid, ""))
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
rowid_to_column() |>
mutate(rowid = ifelse(res_lm, rowid, NA))
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
rowid_to_column() |>
mutate(rowid = ifelse(res_lm, rowid, NA)) |>
ggplot(aes(x = x,
y = y,
label = rowid)) +
geom_point(alpha = 0.2) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11)) +
geom_text()
?geom_text
?geom_text_repel
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
rowid_to_column() |>
mutate(rowid = ifelse(res_lm, rowid, NA)) |>
ggplot(aes(x = x,
y = y,
label = rowid)) +
geom_point(alpha = 0.2) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11)) +
ggrepel::geom_text_repel(size = 4)
diamonds |>
mutate(x_group = cut_width(x, width = 1)) |>
ggplot(aes(y = y, x = x_group)) +
geom_boxplot() +
coord_cartesian(ylim = c(4, 11))
#| label: fig-q5-ex5.3
#| fig-cap-location: top
#| fig-cap: "Scatter-plot vs. Binned Plot for detecting outliers in a two-dimensional plot"
#| fig-asp: 1
gridExtra::grid.arrange(
diamonds |>
mutate(res_lm = (lm(diamonds$y ~ diamonds$x)$residuals)) |>
filter(x >= 4) |>
mutate(res_lm = res_lm < -1 | res_lm > 1) |>
rowid_to_column() |>
mutate(rowid = ifelse(res_lm, rowid, NA)) |>
ggplot(aes(x = x,
y = y,
label = rowid)) +
geom_point(alpha = 0.2) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11)) +
ggrepel::geom_text_repel(size = 3) +
labs(x = "x", y = "y",
subtitle = "Scatter-Plot for detecting outliers"),
diamonds |>
mutate(x_group = cut_width(x, width = 1)) |>
ggplot(aes(y = y, x = x_group)) +
geom_boxplot() +
coord_cartesian(ylim = c(4, 11)) +
labs(x = "x", y = "y",
subtitle = "Binned Plot for detecting outliers"),
nrow = 2)
?diamonds
---
title: "Chapter 11"
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat, y = price)) +
geom_boxplot(aes(group = cut_number(carat, 20)))
#| label: fig-q2-ex5.3
#| fig-cap: "The distribution of carat, partitioned by price"
#| code-fold: true
#| fig-cap-location: top
#| fig-asp: 2
gridExtra::grid.arrange(
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = price,
y = carat)) +
geom_boxplot(aes(group = cut_width(price, width = 2000)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = "Price (in $)",
title = "Boxplot",
y = "Carat") +
coord_flip(),
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat)) +
geom_freqpoly(aes(color = cut_number(price, n = 7)),
lwd = 1, alpha  = 0.8) +
theme_minimal() +
scale_color_brewer(palette = "YlOrRd") +
labs(x = "Carat of the Diamond",
color = "Price (in $)",
y = "Number of diamonds",
title = "Frequency Polygon") +
scale_y_continuous(n.breaks = 4)
,
nrow = 2)
#  labels = c("$326 - $723",
#            "$723 - $1,050",
#           "$1.05K - $1.85K",
#          "$1.85K - $3.1K",
#         "$3.1K - $4.82K",
#        "$4.82K - $7.9K",
#       "$7.9K - $18.8K")
#| label: fig-q1a-ex5.3
#| fig-cap: "Impact of cut_width() and cut_number() on boxplots' visualization of the 2d distribution of carat and price"
#| code-fold: true
#| fig-cap-location: top
#| fig-asp: 1
gridExtra::grid.arrange(
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_width(carat, width = 0.1)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = NULL, subtitle = "cut_width", y = "Price"),
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_number(carat, n = 20)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = "Carat", subtitle = "cut_number", y = "Price"),
nrow = 2)
gridExtra::grid.arrange(
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_width(carat, width = 0.1)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = NULL,
title = "cut_width",
subtitle = "Each boxplot is of equal width, i.e. interval, /nbut contains different number of observations",
y = "Price"),
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_width(carat, width = 0.1)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = NULL,
title = "cut_width with varwidth = TRUE",
subtitle = "Each boxplot is of equal interval, but width /nreflects the square root of number of observations",
y = "Price"),
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_number(carat, n = 20)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = "Carat",
title = "cut_number",
subtitle = "Each boxplot has equal number of observations, /nand the width reflects the interval covered",
y = "Price"),
nrow = 3)
#| label: fig-q6-ex5.3
#| fig-cap: "Advantages and disadvantages of cut_width() vs. cut_number()"
#| code-fold: true
#| fig-cap-location: top
#| fig-asp: 1.5
gridExtra::grid.arrange(
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_width(carat, width = 0.1)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = NULL,
title = "cut_width",
subtitle = "Each boxplot is of equal width, i.e. interval, but contains different number of observations",
y = "Price"),
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_width(carat, width = 0.1)),
varwidth = TRUE,
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = NULL,
title = "cut_width with varwidth = TRUE",
subtitle = "Each boxplot is of equal interval, but width reflects the square root of number of observations",
y = "Price"),
diamonds |>
filter(carat < 3) |>
ggplot(aes(x = carat,
y = price)) +
geom_boxplot(aes(group = cut_number(carat, n = 20)),
outlier.alpha = 0.2) +
theme_minimal() +
labs(x = "Carat",
title = "cut_number",
subtitle = "Each boxplot has equal number of observations, and the width reflects the interval covered",
y = "Price"),
nrow = 3)
#| label: setup
library(tidyverse)
library(scales)
library(ggrepel)
library(patchwork)
data(mpg)
mpg
#| label: setup
library(tidyverse)
library(scales)
library(ggrepel)
library(patchwork)
#| label: setup
library(tidyverse)
library(scales)
library(ggrepel)
library(patchwork)
data(mpg)
names(mpg)
mpg |>
str()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = cyl)) +
geom_point()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factro(cyl)
)
) +
geom_point()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(cyl)
)
) +
geom_point()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(class)
)
) +
geom_point() +
labs(title = "Higher displacement ve")
?mpg
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(class)
)
) +
geom_point() +
labs(title = "Higher displacement vehicles have lower mileage",
subtitle = "2-seater sports cars have high mileage despite higher displacements",
x = "Engine Displacement (in liters)",
y = "Highway Mileage (miles per gallon)",
caption = "Data from mpg dataset")
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(class)
)
) +
geom_point() +
labs(title = "Higher displacement vehicles have lower mileage",
subtitle = "2-seater sports cars have high mileage despite higher displacements",
x = "Engine Displacement (in liters)",
y = "Highway Mileage (miles per gallon)",
caption = "Data from mpg dataset",
color = "Vehicle Class") +
theme(legend.position = "bottom") +
scale_color_viridis_b()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(class)
)
) +
geom_point() +
labs(title = "Higher displacement vehicles have lower mileage",
subtitle = "2-seater sports cars have high mileage despite higher displacements",
x = "Engine Displacement (in liters)",
y = "Highway Mileage (miles per gallon)",
caption = "Data from mpg dataset",
color = "Vehicle Class") +
theme(legend.position = "bottom") +
scale_color_viridis_c()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(class)
)
) +
geom_point() +
labs(title = "Higher displacement vehicles have lower mileage",
subtitle = "2-seater sports cars have high mileage despite higher displacements",
x = "Engine Displacement (in liters)",
y = "Highway Mileage (miles per gallon)",
caption = "Data from mpg dataset",
color = "Vehicle Class") +
theme(legend.position = "bottom") +
scale_color_viridis_d()
mpg |>
ggplot(aes(x = displ,
y = hwy,
col = as_factor(class)
)
) +
geom_point() +
labs(title = "Higher displacement vehicles have lower mileage",
subtitle = "2-seater sports cars have high mileage despite higher displacements",
x = "Engine Displacement (in liters)",
y = "Highway Mileage (miles per gallon)",
caption = "Data from mpg dataset",
color = "Vehicle Class") +
theme(legend.position = "right") +
scale_color_viridis_d()
mpg |>
ggplot(aes(x = cty,
y = hwy,
shape = drv,
col = drv)) +
geom_point()
mpg |>
ggplot(aes(x = cty,
y = hwy,
shape = drv,
col = drv)) +
geom_point() +
labs(x = "City MPG", y = "Highway MPG",
col = "Type of drive train")
mpg |>
ggplot(aes(x = cty,
y = hwy,
shape = drv,
col = drv)) +
geom_point() +
labs(x = "City MPG", y = "Highway MPG",
col = "Type of drive train",
shape = "Type of drive train")
mpg |>
ggplot(aes(x = cty,
y = hwy,
shape = drv,
col = drv)) +
geom_point() +
labs(x = "City MPG", y = "Highway MPG",
col = "Type of drive train",
shape = "Type of drive train")
mpg |>
ggplot(aes(x = cty,
y = hwy,
shape = drv,
col = drv)) +
geom_point() +
labs(x = "City MPG", y = "Highway MPG",
col = "Type of drive train",
shape = "Type of drive train")
mpg |>
ggplot(aes(x = cty,
y = hwy,
shape = drv,
col = drv)) +
geom_point() +
labs(x = "City MPG", y = "Highway MPG",
col = "Type of \ndrive train",
shape = "Type of \ndrive train")
The @fig-q3a-ex5.3 explains this strange phenomenon partially. There are very few diamonds in the category \> 3 carats and most of them near 3 carats are still priced differently. Thus, it is likely that the price of larger diamonds is more affected by other variables than simply the weight (`carat`) of the diamond.
The @fig-q3a-ex5.3 explains this strange phenomenon partially. There are very few diamonds in the category \> 3 carats and most of them near 3 carats are still priced differently. Thus, it is likely that the price of larger diamonds is more affected by other variables than simply the weight (`carat`) of the diamond.
The @fig-q3a-ex5.3 explains this strange phenomenon partially. There are very few diamonds in the category \> 3 carats and most of them near 3 carats are still priced differently. Thus, it is likely that the price of larger diamonds is more affected by other variables than simply the weight (`carat`) of the diamond.
