rename(Carrier = carrier,
`Number of Airports` = n)
names(flights)
flights |>
group_by(dest) |>
slice_max(n=1, by = dep_delay)
flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay)
flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay) |>
select(dest, flight, origin, dep_delay, month, day)
flights |>
# group_by(dest) |>
slice_max(n=1, order_by = dep_delay) |>
select(dest, flight, origin, dep_delay, month, day)
flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay) |>
select(dest, flight, origin, dep_delay, month, day)
flights |>
# group_by(dest) |>
slice_max(n=1, order_by = dep_delay, by = dest) |>
select(dest, flight, origin, dep_delay, month, day)
# Option 2
flights |>
slice_max(n=1, order_by = dep_delay, by = dest) |>
select(dest, flight, origin, dep_delay, month, day)
# Option 2
flights |>
slice_max(n=1, order_by = dep_delay, by = dest) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay))
# Option 1: Group by "dest" and then use slice_max
flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay))
# Option 1: Group by "dest" and then use slice_max
a = flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay))
# Option 2
b = flights |>
slice_max(n=1, order_by = dep_delay, by = dest) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay))
a == b
View(a)
View(b)
?arrange
# Option 1: Group by "dest" and then use slice_max
a = flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Option 2
b = flights |>
slice_max(n=1, order_by = dep_delay, by = dest) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
a == b
View(a)
View(b)
NA >> 100
NA > 100
# Option 1: Group by "dest" and then use slice_max
a = flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Option 2
b = flights |>
slice_max(n=1, order_by = dep_delay, by = dest, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
a == b
assertthat::are_equal(a, b)
assertthat::are_equal(10, 10)
assertthat::are_equal(1:10, 1:10)
assertthat::are_equal(a, b)
sum(a != b)
# Option 1: Group by "dest" and then use slice_max
a = flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Option 2: Directly use slice_max() with ".by" argument
b = flights |>
slice_max(n=1, order_by = dep_delay, .by = dest, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Option 2: Directly use slice_max() with "by" argument
b = flights |>
slice_max(n=1, order_by = dep_delay, by = dest, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Check results
sum(a != b)
?gt
b |> slice_head(n=5) |> gt()
names(flights)
flights |>
group_by(dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE))
flights |>
group_by(dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = dep_time, y = avg_delay)) +
geom_line() +
theme_bw() +
labs(x = "Departure time",
y = "Average delay in minutes")
a = flights |>
group_by(dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE))
summary(a)
plot(a$dep_time)
View(a)
names(flights)
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = sched_dep_time, y = avg_delay)) +
geom_line() +
theme_bw() +
labs(x = "Departure time",
y = "Average delay in minutes")
a = flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE))
plot(a$dep_time)
plot(a$sched_dep_time)
View(a)
lubridate::hm(a$sched_dep_time)
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = sched_dep_time, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Departure time",
y = "Average delay in minutes")
?slice_min
names(flights)
flights |>
filter(dest = "IAH") |>
group_by(dest, origin) |>
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay))
flights |>
filter(dest == "IAH") |>
group_by(dest, origin) |>
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay))
flights |>
filter(dest == "JFK") |>
group_by(dest, origin) |>
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay))
flights |>
filter(dest == "JFK")
flights |>
filter(origin == "JFK") |>
group_by(origin, dest)
flights |>
filter(origin == "JFK") |>
group_by(origin, dest) |>
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay))
flights |>
filter(origin == "JFK") |>
group_by(origin, dest) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay))
flights |>
filter(origin == "JFK") |>
group_by(origin, dest) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay)) |>
slice_head(n = 10)
flights |>
filter(origin == "JFK") |>
group_by(dest) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay)) |>
slice_head(n = 10)
flights |>
filter(origin == "JFK") |>
group_by(origin, dest) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay)) |>
slice_head(n = 10) |>
ungroup()
a = flights |>
filter(origin == "JFK") |>
group_by(origin, dest) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
arrange(desc(avg_delay)) |>
slice_head(n = 10) |>
ungroup()
a
a |>
slice_min(n = 2)
a |>
slice_min(n = 2, order_by = avg_delay)
a |>
slice_min(n = -2, order_by = avg_delay)
gt(a)
gt(a, digits = 2)
?count
names(flights)
flights |>
group_by(origin, dest) |>
summarise(n = n())
flights |>
group_by(origin, dest) |>
summarise(n = n()) |>
arrange(desc(n))
flights |>
group_by(origin, dest) |>
summarise(n = n()) |>
arrange(desc(n)) |>
slice_head(n = 5)
flights |>
group_by(origin, dest) |>
summarise(n = n()) |>
arrange(desc(n)) |>
ungroup() |>
slice_head(n = 5)
flights |>
count(origin, dest)
flights |>
count(origin, dest) |>
slice_head(n = 5)
flights |>
count(origin, dest) |>
slice_head(n = 5, order_by(n))
flights |>
count(origin, dest)
flights |>
count(origin, dest) |>
arrange(desc(n))
flights |>
count(origin, dest) |>
arrange(desc(n)) |>
slice_head(n = 5)
flights |>
group_by(origin, dest) |>
summarise(n = n()) |>
arrange(desc(n)) |>
ungroup() |>
slice_head(n = 5)
flights |>
count(origin, dest) |>
arrange(desc(n)) |>
slice_head(n = 5)
flights |>
count(origin, dest, sort = TRUE) |>
slice_head(n = 5)
Suppose we have the following tiny data frame:
df <- tibble(x = 1:5,
y = c("a", "b", "a", "a", "b"),
z = c("K", "K", "L", "L", "K") )
df
df |>
group_by(y)
df |> arrange(y)
df |>
group_by(y) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
df |>
group_by(y, z) |>
summarize(mean_x = mean(x), .groups = "drop")
df
# Code Chunk 1
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
# Code Chunk 2
df |>
group_by(y, z) |>
mutate(mean_x = mean(x))
df <- tibble(x = 1:5,
y = c("a", "b", "a", "a", "b"),
z = c("K", "K", "L", "L", "K") )
df
df
# Code Chunk 1
df |>
group_by(y, z) |>
summarize(mean_x = mean(x))
# Code Chunk 2
df |>
group_by(y, z) |>
mutate(mean_x = mean(x))
library(gt)
gt(a)
library(tidyverse)
a = flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
#| label: setup
library(tidyverse)
library(nycflights13)
library(gt)
data("flights")
a = flights |>
group_by(dest) |>
slice_max(n=1, order_by = dep_delay, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Option 2: Directly use slice_max() with "by" argument
b = flights |>
slice_max(n=1, order_by = dep_delay, by = dest, na_rm = TRUE) |>
select(dest, flight, origin, dep_delay, month, day) |>
arrange(desc(dep_delay), desc(flight))
# Check results
sum(a != b)
# Display results
b |>
slice_head(n=5) |>
gt() |>
cols_label(c("Destination", "Flight", "Origin Airport",
"Departure Depay (minutes)", "Month", "Date"))
# Display results
b |>
slice_head(n=5) |>
gt() |>
cols_label(dest = "Destination",
flight = "Flight",
origin = "Origin Airport",
dep_delay = "Departure Depay (minutes)",
month = "Month",
day = "Date"))
# Display results
b |>
slice_head(n=5) |>
gt() |>
cols_label(dest = "Destination",
flight = "Flight",
origin = "Origin Airport",
dep_delay = "Departure Depay (minutes)",
month = "Month",
day = "Date")
# Display results
b |>
slice_head(n=5) |>
gt() |>
cols_label(dest = "Destination",
flight = "Flight",
origin = "Origin Airport",
dep_delay = "Departure Depay (minutes)",
month = "Month",
day = "Date") |>
cols_align(align = "center")
install.packages("styler")
library(styler)
?styler
styler:::style_active_file()
styler:::style_active_file()
130 %/% 100
1159 %/% 100
1159 %% 100
styler:::style_active_file()
#| label: setup
library(tidyverse)
library(nycflights13)
library(gt)
data("flights")
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = sched_dep_time, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time",
y = "Average delay in minutes")
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE))
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
mutate(hour = sched_dep_time %/% 100,
minute = sched_dep_time %% 100) |>
mutate(time_min = hour*60 + minute) |>
ggplot(aes(x = time_min, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time",
y = "Average delay in minutes")
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
mutate(hour = sched_dep_time %/% 100,
minute = sched_dep_time %% 100) |>
mutate(time_min = hour*60 + minute) |>
ggplot(aes(x = time_min, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time (in min. since start of day)",
y = "Average delay in minutes")
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
mutate(hour = sched_dep_time %/% 100,
minute = sched_dep_time %% 100) |>
mutate(time_hr = hour + minute/60) |>
ggplot(aes(x = time_hr, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time (in min. since start of day)",
y = "Average delay in minutes")
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
mutate(hour = sched_dep_time %/% 100,
minute = sched_dep_time %% 100) |>
mutate(time_hr = hour + minute/60) |>
ggplot(aes(x = time_hr, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time (in Hrs.)",
y = "Average delay in minutes") +
scale_x_continuous(limits = c(4,24))
?scale_x_continuous
?seq
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
mutate(hour = sched_dep_time %/% 100,
minute = sched_dep_time %% 100) |>
mutate(time_hr = hour + minute/60) |>
ggplot(aes(x = time_hr, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time (in Hrs.)",
y = "Average delay in minutes") +
scale_x_continuous(breaks = seq(from = 0, to = 24, by = 4))
styler:::style_active_file()
styler:::set_style_transformers()
styler:::style_active_file()
flights |>
group_by(month) |>
summarize(
delay = mean(arr_delay, na.rm = TRUE)
) |>
ggplot(aes(x = month, y = delay)) +
geom_point() +
geom_line()
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(n = n(),
delay = mean(arr_delay, na.rm = TRUE)) |>
filter(n > 10)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(n = n(),
delay = mean(arr_delay, na.rm = TRUE)) |>
filter(n > 10)
flights |>
filter(carrier == "UA",
dest %in% c("IAH","HOU"),
sched_dep_time > 0900,
sched_arr_time < 2000) |>
group_by(flight) |>
summarize(delay = mean(arr_delay, na.rm=TRUE),
cancelled = sum(is.na(arr_delay)), n = n()) |>
filter(n > 10)
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
flights |>
filter(carrier == "UA", dest %in% c("IAH", "HOU"), sched_dep_time >
0900, sched_arr_time < 2000) |>
group_by(flight) |>
summarise(delay = mean(
arr_delay,
na.rm = TRUE
), cancelled = sum(is.na(arr_delay)), n = n()) |>
filter(n > 10)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarise(
n = n(),
delay = mean(arr_delay, na.rm = TRUE)
) |>
filter(n > 10)
styler:::style_active_file()
