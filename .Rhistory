geom_line(aes(y = prop_cancelled*100),
col = "red") +
geom_line(aes(y = avg_delay),
col = "darkgrey") +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL)
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = 0.1,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = 0.1,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL)
coeff = 0.05
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL)
coeff = 0.2
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL)
coeff = 0.1
coeff = 0.1
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL)
coeff = 0.15
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL)
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y = element_text(col = "red"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y = element_text(color = "red"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y = element_text(color = "red"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y = element_text(color = "red")
axis.title.y = element_text(color = "red"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y = element_text(color = "red"),
axis.title.y = element_text(color = "red"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "grey",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y.left = element_text(color = "red"),
axis.title.y.left = element_text(color = "red"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "blue",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y.left = element_text(color = "red"),
axis.title.y.left = element_text(color = "red"),
axis.text.y.right = element_text(color = "blue"),
axis.title.y.right = element_text(color = "blue"))
flights |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(month, date) |>
summarise(
n = n(),
cancelled = sum(is.na(dep_time)),
prop_cancelled = sum(is.na(dep_time)) / n(),
avg_delay = mean(dep_delay, na.rm = TRUE)
) |>
ggplot(aes(x = date)) +
geom_smooth(aes(y = prop_cancelled * 100),
method = "loess",
span = coeff,
col = "red",
se = FALSE) +
geom_smooth(aes(y = avg_delay), ,
method = "loess",
span = coeff,
col = "blue",
se = FALSE) +
theme_minimal() +
scale_y_continuous(
name = "Percentage Cancelled Flights (%)",
sec.axis = sec_axis(trans = ~ .*0.5,
name = "Avg. Delay (min.)")) +
labs(x = NULL) +
theme(axis.text.y.left = element_text(color = "red"),
axis.title.y.left = element_text(color = "red"),
axis.text.y.right = element_text(color = "blue"),
axis.title.y.right = element_text(color = "blue")) +
labs(title = "Flight Cancellations and average delays are correlated",
subtitle = "Higher average delay occurs on same days as more flight cancellations")
flights |>
filter(is.na(dep_time)) |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(date) |>
count() |>
ggplot(aes(x = date, y = n)) +
geom_line() +
ggthemes::theme_fivethirtyeight() +
labs(title = "Cancelled flight numbers show spikes on certain days",
subtitle = "There is consistent cancellation in December - may be due to snowstorms!") +
theme(
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white", colour="grey")
)
flights |>
filter(is.na(dep_time)) |>
mutate(date = make_date(year = year,
month = month,
day = day)) |>
group_by(date) |>
count() |>
ggplot(aes(x = date, y = n)) +
geom_line() +
ggthemes::theme_fivethirtyeight() +
labs(title = "Cancelled flight numbers show spikes on certain days",
subtitle = "There is consistent cancellation in December - may be due to snowstorms!") +
theme(
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white", colour = "white")
)
gridExtra::grid.arrange(
flights |>
filter(is.na(dep_time)) |>
group_by(month) |>
count() |>
ggplot(aes(x = month, y = n)) +
geom_line() +
ggthemes::theme_fivethirtyeight() +
labs(y = "No. of cancelled flights",
title = "Flight cancellations occur most \nin a few months",
subtitle = "December-Feruary, June-July see maximum cancelled flights. \nOctober-November have the least cancellations") +
scale_x_continuous(breaks = 1:12,
labels = mths_lab) +
theme(title = element_text(size = 8)) +
theme(
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white", colour = "white")
),
flights |>
filter(is.na(dep_time)) |>
group_by(day) |>
count() |>
ggplot(aes(x = day, y = n)) +
geom_line() +
geom_point(col = "darkgrey", size = 2) +
ggthemes::theme_fivethirtyeight() +
labs(y = "No. of cancelled flights",
title = "Flight cancellations spike on 8th-9th days \nof the months",
subtitle = "This is unlikely to be a pattern since \nthis is a sum, influenced by a few high values") +
scale_x_continuous(breaks = seq(1, 31, 5)) +
theme(title = element_text(size = 8)) +
theme(
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white", colour = "white")
),
ncol = 2)
# Sample vector with missing values
x <- c(1, NA, 3, NA, 5, 6)
# Count of missing values
count_missing <- sum(is.na(x))
cat("Count of missing values:", count_missing, "\n")
# Proportion of missing values
prop_missing <- mean(is.na(x))
cat("Proportion of missing values:", prop_missing, "\n")
?prod
x <- sample(c(TRUE, FALSE),
size = 10,
replace = TRUE)
x
prod(x)
min(x)
max(x)
min(x)
y <- rep(TRUE, 10)
y
x
prod(x)
prod(y)
prod(y)
min(x)
min(y)
# A logical vector with random TRUE and FALSE
random <- sample(c(TRUE, FALSE),
size = 10,
replace = TRUE)
random
# A logical vector with all TRUE
all_true <- rep(TRUE, 10)
all_true
# A logical vector with all FALSE
all_false <- rep(FALSE, 10)
all_false
prod(random)
prod(all_true)
prod(all_false)
min(random))
min(random)
min(all_true)
min(all_false)
?allGenerics
?all
?any
