?seq
flights |>
group_by(sched_dep_time) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
mutate(hour = sched_dep_time %/% 100,
minute = sched_dep_time %% 100) |>
mutate(time_hr = hour + minute/60) |>
ggplot(aes(x = time_hr, y = avg_delay)) +
geom_line() +
geom_smooth(color = "red", se = FALSE) +
theme_bw() +
labs(x = "Scheduled Departure time (in Hrs.)",
y = "Average delay in minutes") +
scale_x_continuous(breaks = seq(from = 0, to = 24, by = 4))
styler:::style_active_file()
styler:::set_style_transformers()
styler:::style_active_file()
flights |>
group_by(month) |>
summarize(
delay = mean(arr_delay, na.rm = TRUE)
) |>
ggplot(aes(x = month, y = delay)) +
geom_point() +
geom_line()
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(n = n(),
delay = mean(arr_delay, na.rm = TRUE)) |>
filter(n > 10)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(n = n(),
delay = mean(arr_delay, na.rm = TRUE)) |>
filter(n > 10)
flights |>
filter(carrier == "UA",
dest %in% c("IAH","HOU"),
sched_dep_time > 0900,
sched_arr_time < 2000) |>
group_by(flight) |>
summarize(delay = mean(arr_delay, na.rm=TRUE),
cancelled = sum(is.na(arr_delay)), n = n()) |>
filter(n > 10)
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
flights |>
filter(carrier == "UA", dest %in% c("IAH", "HOU"), sched_dep_time >
0900, sched_arr_time < 2000) |>
group_by(flight) |>
summarise(delay = mean(
arr_delay,
na.rm = TRUE
), cancelled = sum(is.na(arr_delay)), n = n()) |>
filter(n > 10)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarise(
n = n(),
delay = mean(arr_delay, na.rm = TRUE)
) |>
filter(n > 10)
styler:::style_active_file()
styler:::style_active_file()
#| label: Chunk-6.3.4
library(tidyverse)
library(tidyverse)
household
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_to = "Value"
)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_to = "Value",
values_drop_na = TRUE
)
# Method 1
library(tidyverse)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_to = "Value",
values_drop_na = TRUE
)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_to = "Value",
values_drop_na = TRUE
)
households
household
cms_patient_experience
names(cms_patient_experience)
distinct(cms_patient_experience$measure_cd)
cms_patient_experience |> distinct(measure_cd)
cms_patient_experience
names(cms_patient_experience)
cms_patient_experience |>
distinct(measure_cd)
cms_patient_experience |>
distinct(measure_title)
cms_patient_experience
cms_patient_experience |>
pivot_wider(names_from = measure_cd,
values_from = prf_rate)
?pivot_wider
cms_patient_experience |>
pivot_wider(
names_from = measure_cd,
values_from = prf_rate,
id_cols = org_pac_id)
cms_patient_experience |>
pivot_wider(
names_from = measure_cd,
values_from = prf_rate,
id_cols = c(org_pac_id, org_nm))
cms_patient_experience |>
pivot_wider(
names_from = measure_cd,
values_from = prf_rate,
id_cols = starts_with("org"))
?pull
cms_patient_experience |>
distinct(org_nm)
cms_patient_experience |>
distinct(org_nm) |>
pull()
cms_patient_experience |>
distinct(org_nm) |>
pull() |>
class()
df <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"A",        "bp1",    102,
"A",        "bp2",    120,
"B",        "bp1",    140,
"B",        "bp2",    115
)
df
# Chunk 1: Chunk-6.3.4
#| label: Chunk-6.3.4
#| message: false
#| error: false
#| warning: false
# Method 1
library(tidyverse)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_to = "Value",
values_drop_na = TRUE
)
# Method 2
# Chunk 2: pivot-wider-working
#| label: pivot-wider-working
#| collapse: true
df <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"A",        "bp1",    102,
"A",        "bp2",    120,
"B",        "bp1",    140,
"B",        "bp2",    115
)
df
df |>
pivot_wider(
id_cols = id,
names_from = measurement,
values_from = value
)
# Using the Code given by R in Warning to find out the
# duplicate observation
df |>
group_by(id, measurement) |>
summarise(n = n(), .groups = "drop") |>
filter(n > 1)
# Using the Code given by R in Warning to find out the
# duplicate observation
df |>
group_by(id, measurement) |>
summarise(n = n()) |>
filter(n > 1)
# Using the Code given by R in Warning to find out the
# duplicate observation
df |>
group_by(id, measurement) |>
summarise(n = n(), .groups = "drop") |>
filter(n > 1)
x <- 2
x y = 2
tidyverse::tidyverse_logo()
usethis::use_blank_slate()
rm(list = ls())
library(tidyverse)
getwd()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_hex()
ggsave("diamonds.png")
write_csv(diamonds, "data/diamonds.csv")
write_csv(diamonds, "docs/diamonds.csv")
install.packages("bit")
write_csv(diamonds, "docs/diamonds.csv")
getwd()
quarto install extension sellorm/quarto-twitter-embed
library(tidyverse)
read_csv("https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv")
spec()
df = read_csv("https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv")
df = read_csv("https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
show_col_types = FALSE)
df = read_csv("https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv")
spec(df)
df |>
class()
df = read_csv("https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv") |>
as_tibble()
class(df)
names(df)
df
library(styler)
styler::style_text(colnames(df))
colnames(df)
style_text(df)
library(prettycode)
install.packages("prettycode")
library(prettycode)
style_text(df)
df
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")) |>
as_tibble()
df
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
rename(
student_id = `Student ID`,
full_name = `Full Name`
)
df
library(janitor)
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
clean_names()
df
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
clean_names() |>
mutate(meal_plan = as_factor(meal_plan))
df
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
clean_names() |>
mutate(
meal_plan = as_factor(meal_plan),
age = parse_number(age)
)
df
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
clean_names() |>
mutate(
meal_plan = as_factor(meal_plan),
age = parse_number(if_else(age == "five", 5, age))
)
df
read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
clean_names()
df = read_csv(
"https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv",
na = c("N/A", "")
) |>
as_tibble() |>
clean_names() |>
mutate(
meal_plan = as_factor(meal_plan),
age = parse_number(if_else(age == "five", "5", age))
)
df
#| label: setup
library(tidyverse)
library(gt)
#| label: tbl-q1-Ex-8.2.4
#| tbl-cap: "Imported data using read_delim() function"
import_df = "Name|Age|Gender|City|Salary
John|28|Male|New York|75000
Emily|22|Female|Los Angeles|60000
Michael|31|Male|Chicago|80000
Jessica|25|Female|Houston|65000
William|29|Male|Miami|70000
Sophia|27|Female|San Francisco|75000
Daniel|24|Male|Seattle|72000
Olivia|30|Female|Boston|78000
James|26|Male|Dallas|67000
Ava|23|Female|Atlanta|62000"
df = read_delim(import_df, delim = "|")
df |>
gt()
df = read_delim(import_df)
df |>
gt()
df = read_delim(import_df)
df |>
gt()
?read_csv
?read_fwf
#| label: tbl=q3-Ex-8.2.4
#| tbl-cap: "Fixed Width File Data parsed using read_fwf"
import_fwf_data = "John    Smith   35  New York
Alice   Johnson 28  Los Angeles
Michael Williams 42  Chicago"
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(10, 10, 3, -1))
)
df2
df2
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(10, 10, 3, -1)),
col_names = FALSE
)
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(10, 10, 3, -1))
)
df2
df2 = read_fwf(
"/import_fwf_data.txt",
col_positions = fwf_widths(c(10, 10, 3, -1))
)
df2 = read_fwf(
"docs/import_fwf_data.txt",
col_positions = fwf_widths(c(10, 10, 3, -1))
)
df2 = read_fwf(
"/import_data_fwf.txt",
col_positions = fwf_widths(c(10, 10, 3, -1))
)
df2 = read_fwf(
"import_data_fwf.txt",
col_positions = fwf_widths(c(10, 10, 3, -1))
)
df2
df2 = read_fwf(
"import_data_fwf.txt",
col_positions = fwf_widths(c(8, 8, 2, -1))
)
df2
df2 = read_fwf(
"import_data_fwf.txt",
col_positions = fwf_widths(c(9, 8, 2, -1))
)
df2
df2 = read_fwf(
"import_data_fwf.txt",
col_positions = fwf_widths(c(8, 8, 2, -1))
)
df2
df2 = read_fwf(
"import_data_fwf.txt",
col_positions = fwf_widths(c(8, 8, 3))
)
df2
#| label: tbl=q3-Ex-8.2.4
#| tbl-cap: "Fixed Width File Data parsed using read_fwf"
import_fwf_data = "John    Smith   35  New York
Alice   Johnson 28  Los Angeles
Michael Williams 42  Chicago"
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3))
)
df2
?rename_all
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3, -1))
)
df2
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3, 8))
)
df2
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3, 11))
)
df2
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3, 12))
)
df2
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3, 12))
) |>
rename_all(c("Name", "Surname", "Age", "City"))
colnames(df2) = c("Name", "Surname", "Age", "City")
df2
df2 |>
gt()
?read_csv
import_quote = "x,y\n1,'a,b'"
read_csv(
import_quote,
quote = "'"
)
read_csv(
import_quote,
quote = "'",
col_names = FALSE
)
read_csv(
import_quote,
quote = "'",
col_names = FALSE
) |>
gt()
#| label: tbl-q3-Ex-8.2.4
#| tbl-cap: "Fixed Width File Data parsed using read_fwf"
import_fwf_data = "John    Smith   35  New York
Alice   Johnson 28  Los Angeles
Michael Williams 42  Chicago"
df2 = read_fwf(
import_fwf_data,
col_positions = fwf_widths(c(8, 8, 3, 12))
)
colnames(df2) = c("Name", "Surname", "Age", "City")
df2 |>
gt()
read_csv("a,b\n1,2,3\n4,5,6")
read_csv("a,b\n1,2,3\n4,5,6")
read_csv("a,b,c\n1,2\n1,2,3,4")
#| label: setup
library(tidyverse)
library(gt)
read_csv("a,b\n1,2,3\n4,5,6")
read_csv("a,b\n\"1")
read_csv("a,b\n1,2\na,b")
read_csv("a;b\n1;3")
read_csv2("a;b\n1;3")
annoying <- tibble(
`1` = 1:10,
`2` = `1` * 2 + rnorm(length(`1`))
)
annoying
annoying |>
pull(`1`)
annoying |>
gpglot(aes(x = `1`, y = `2`)) +
geom_point() +
theme_classic()
annoying |>
ggglot(aes(x = `1`, y = `2`)) +
geom_point() +
theme_classic()
annoying |>
ggplot(aes(x = `1`, y = `2`)) +
geom_point() +
theme_classic()
annoying = annoying |>
mutate(`3` = `2` / `1`)
annoying
annoying |>
rename(
"one" = `1`,
"two" = `2`,
"three" = `3`
)
annoying
