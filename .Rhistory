group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
color = color)) +
geom_bar(stat = "identity")
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
fill = color)) +
geom_bar(stat = "identity")
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
fill = color)) +
geom_bar(stat = "identity") +
labs(title = "Plot produced by tidyverse method to resolve issue")
# Create a grouped bar plot with correct proportions
ggplot(diamonds, aes(x = cut, fill = color)) +
geom_bar(position = "fill") +  # Use position = "fill" to represent proportions
ylab("Proportion") +  # Label for y-axis
scale_y_continuous(labels = scales::percent_format(scale = 1))  # Convert y-axis labels to percentages
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar()
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "fill")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "dodge")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = NULL)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar()
?geom_bar
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "stack")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "idenity")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity", alph = 0.2)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity", alpha = 0.2)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "identity", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "stack", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "fill", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "identity", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "dodge", fill = NA)
?position_fill
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
mpg |>
group_by(cty, hwy) |>
count() |>
arrange(desc(n))
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
mpg |>
group_by(cty, hwy) |>
count() |>
nrow()
nrow(mpg)
gridExtra::grid.arrange(
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point() +
labs(subtitle = "Faulty code: Overplotting"),
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter") +
labs(subtitle = "Problem resolved using position = \"jitter\" in geom_point()")
)
gridExtra::grid.arrange(
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point() +
labs(subtitle = "Faulty code: Overplotting"),
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter") +
labs(subtitle = "Problem resolved by position = \"jitter\""),
ncol = 2
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(position = "identity")
?geom_point
?geom_jitter
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic()
#| label: fig-q3-ex6
#| fig-cap: "Use of arguments to control jittering in scatterplots"
g = ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic()
g + geom_point()
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 2, height = 2) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.2, height = 0.2) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.7, height = 0.7) +
labs(title = "geom_jitter()")
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 0.2, height = 0.2) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.7, height = 0.7) +
labs(title = "geom_jitter()")
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 0.2, height = 1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 1, height = 0.2) +
labs(title = "geom_jitter()")
#| label: fig-q3-ex6
#| fig-cap: "Use of arguments to control jittering in scatterplots"
g = ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic() +
labs(x = NULL, y = NULL)
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "geom_jitter()")
g + geom_point() + labs(title = "geom_point()")
gridExtra::grid.arrange(
g + geom_point() +
labs(title = "geom_point()"),
g + geom_jitter() +
labs(title = "geom_jitter()"),
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "jitter width = 0.1, height = 1"),
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "jitter width = 1, height = 0.1"),
ncol = 2,
nrow = 2)
g +
geom_point(color = "lightblue") +
geom_jitter(color = "darkblue") +
geom_jitter(width = 0.1, height = 1, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
g +
geom_point(color = "lightblue") +
geom_jitter(color = "darkblue") +
geom_jitter(width = 0.1, height = 2, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
g +
geom_point(color = "lightblue") +
geom_jitter(width = 0.1, height = 2, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
g +
geom_point(color = "black") +
geom_jitter(width = 0.1, height = 2, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
gridExtra::grid.arrange(
g + geom_point() +
labs(title = "geom_point()"),
g + geom_jitter() +
labs(title = "geom_jitter()"),
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "jitter width = 0.1, height = 1"),
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "jitter width = 1, height = 0.1"),
ncol = 2,
nrow = 2)
?geom_count()
g + geom_count()
?grid.arrange
gridExtra::grid.arrange(
g +
geom_count() +
labs(title = "geom_count()"),
g +
geom_jitter() +
labs(title = "geom_jitter()"),
ncol = 2
)
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
library(gt)
data("mpg")
data("diamonds")
?geom_boxplot
names(mpg)
mpg |>
ggplot(aes(x = class,
y = displ)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = displ,
fill = class)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = displ,
fill = class)) +
geom_boxplot()
names(mpg)
mpg |>
distinct(manufacturer)
names(mpg)
mpg |>
distinct(cyl)
mpg |>
ggplot(aes(x = class,
y = displ,
fill = cyl)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = displ,
fill = cyl,
group = cyl)) +
geom_boxplot()
mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ,
fill = cyl,
group = cyl)) +
geom_boxplot()
mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ,
fill = cyl,
group = cyl)) +
geom_boxplot(position = "dodge2")
mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ)) +
geom_boxplot(position = "dodge2")
mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ,
group = cyl)) +
geom_boxplot(position = "dodge2")
names(mpg)
mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ,
fill = trans,
group = trans)) +
geom_boxplot(position = "dodge2")
mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ,
fill = cyl,
group = cyl)) +
geom_boxplot(position = "dodge2")
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
library(gt)
data("mpg")
data("diamonds")
mpg
mpg |>
names()
mpg |>
str()
mpg |>
ggplot(aes(x = class,
y = hwy)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = as_factor(drv))) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = drv)) +
geom_boxplot()
#| label: fig-q4-ex6
#|
gridExtra::grid.arrange(
g +
geom_count() +
labs(title = "geom_count()"),
g +
geom_jitter() +
labs(title = "geom_jitter()"),
ncol = 2
)
#| label: fig-q3-ex6
#| fig-cap: "Use of arguments to control jittering in scatterplots"
g = ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic() +
labs(x = NULL, y = NULL)
gridExtra::grid.arrange(
g + geom_point() +
labs(title = "geom_point()"),
g + geom_jitter() +
labs(title = "geom_jitter()"),
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "jitter width = 0.1, height = 1"),
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "jitter width = 1, height = 0.1"),
ncol = 2,
nrow = 2)
#| label: fig-q4-ex6
#|
gridExtra::grid.arrange(
g +
geom_count() +
labs(title = "geom_count()"),
g +
geom_jitter() +
labs(title = "geom_jitter()"),
ncol = 2
)
ggplot(data = mtcars, aes(x = factor(cyl))) +
geom_count()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = drv)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = drv)) +
geom_boxplot() +
theme_minimal()
mpg
gtcars
library(gt)
gtcars |>
str()
gtcars |>
summarytools::dfSummary() |> view()
gtcars |>
summarytools::dfSummary() |> view()
gtcars |>
summarytools::dfSummary()
gtcars |>
ggplot(aes(x = bdy_style, fill = bdy_style)) |>
geom_bar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar() +
coord_polar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style,
y = prop)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom",
legend.title = element_text("Body Style"))
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom",
legend.title = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom",
fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "black") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "darkgrey") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "white") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
?coord_polar
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "white") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
