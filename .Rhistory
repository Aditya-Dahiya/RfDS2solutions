color = bill_depth_mm)) +
geom_point() +
geom_smooth()
# Chunk 12
#| label: Question_9_Code
#| eval: false
ggplot(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g,
color = island)) +
geom_point() +
geom_smooth(se = FALSE)
# Chunk 13
#| label: fig-Question_9_Code_Run
#| fig-cap: "Plot generated from running the Code of Question 9"
#| echo: false
ggplot(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g,
color = island)) +
geom_point() +
geom_smooth(se = FALSE)
# Chunk 14
#| label: Question_10
#| eval: false
# Code 1
ggplot(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point() +
geom_smooth()
# Code 2
ggplot() +
geom_point(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g)
) +
geom_smooth(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g))
# Chunk 15
#| label: fig-Question-10-code
#| fig-cap: "Comparison of the two plots produced by the codes in Question 10"
#| echo: false
#| warning: false
#| message: false
#| fig-asp: 0.5
g1 = ggplot(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point() +
geom_smooth() +
labs(caption = "Code 1")
g2 = ggplot() +
geom_point(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g)
) +
geom_smooth(data = penguins,
mapping = aes(x = flipper_length_mm,
y = body_mass_g)) +
labs(caption = "Code 2")
gridExtra::grid.arrange(g1, g2,
ncol = 2)
rm(g1, g2)
# Chunk 16
#| label: fig-Question-1-Exercise-2.4.3
#| fig-cap: "Change in figure when species is assigned to y-axis"
#| fig-cap-location: top
#| fig-asp: 0.5
p1 = penguins |>
ggplot(aes(x = species)) +
geom_bar() +
labs(caption = "Species on x-axis")
p2 = penguins |>
ggplot(aes(y = species)) +
geom_bar() +
labs(caption = "Species on y-axis")
gridExtra::grid.arrange(p1, p2, ncol = 2)
# Chunk 17
#| label: fig-Question_2_Ex_2.4.3
#| fig-cap: "The two plots produced by the code given, with red color vs. red fill"
#| fig-asp: 0.5
gridExtra::grid.arrange(
ggplot(penguins, aes(x = species)) + geom_bar(color = "red") +
labs(caption = "Color = Red"),
ggplot(penguins, aes(x = species)) + geom_bar(fill = "red") +
labs(caption = "Fill = Red"),
ncol = 2)
# Chunk 18
#| label: fig-hist1
#| fig-cap: "Histogram with different bin-widths tried out to select the most relevant one"
#| warning: false
g1 = ggplot(diamonds, aes(x=carat)) +
geom_histogram(fill = "white", color = "black") +
theme_classic() + labs(x = NULL, y = NULL,
subtitle = "Default Bindwidth")
g2 = ggplot(diamonds, aes(x=carat)) +
geom_histogram(fill = "white", color = "black",
binwidth = 0.1) +
theme_classic() +
labs(x = NULL, y = NULL,
subtitle = "Bindwidth = 0.1")
g3 = ggplot(diamonds, aes(x=carat)) +
geom_histogram(fill = "white", color = "black",
binwidth = 0.2) +
theme_classic() +
labs(x = NULL, y = NULL,
subtitle = "Bindwidth = 0.2")
g4 = ggplot(diamonds, aes(x=carat)) +
geom_histogram(fill = "white", color = "black",
binwidth = 0.3) +
theme_classic() +
labs(x = NULL, y = NULL,
subtitle = "Bindwidth = 0.3")
g5 = ggplot(diamonds, aes(x=carat)) +
geom_histogram(fill = "white", color = "black",
binwidth = 0.5) +
theme_classic() +
labs(x = NULL, y = NULL,
subtitle = "Bindwidth = 0.5")
g6 = ggplot(diamonds, aes(x=carat)) +
geom_histogram(fill = "white", color = "black",
binwidth = 1) +
theme_classic() +
labs(x = NULL, y = NULL,
subtitle = "Bindwidth = 1")
gridExtra::grid.arrange(g1, g2, g3, g4, g5, g6,
ncol = 3, nrow = 2)
# Chunk 19
#| label: remove-objects-1
#| echo: false
rm(g1, g2, g3, g4, g5, g6)
rm(g1, g2, g3, g4, g5, g6, p1, p2, df, c, y, test1)
data(mpg)
summarise(mpg)
# Visualize summary of the data frame
library(dfSummary)
# Visualize summary of the data frame
library(summarytools)
dfSummary(mpg)
# Visualize summary of the data frame
mpg |>
summarytools::dfSummary() |>
view()
# Visualize summary of the data frame
mpg |>
summarytools::dfSummary(valid.col = F,
missig.col = F) |>
view()
# Visualize summary of the data frame
mpg |>
summarytools::dfSummary(valid.col = F,
missing.col = F) |>
view()
# Visualize summary of the data frame
mpg |>
summarytools::dfSummary(valid.col = F,
missing.col = F) |>
view()
# Visualize summary of the data frame
mpg |>
summarytools::dfSummary(plain.ascii  = FALSE,
style = "grid",
graph.magnif = 0.75,
valid.col = FALSE,
tmp.img.dir = "/tmp") |>
view()
# Visualize summary of the data frame
mpg |>
summarytools::dfSummary(plain.ascii  = FALSE,
style = "grid",
graph.magnif = 0.75,
valid.col = FALSE,
na.col = FALSE,
headings = FALSE,
tmp.img.dir = "/tmp") |>
view()
?mpg
mpg
mpg
g1 = mpg |>
ggplot(aes(x = hwy, y = displ)) |>
theme_bw()
g1
g1 = mpg |>
ggplot(aes(x = hwy, y = displ)) +
theme_bw()
g1
mpg |>
ggplot(aes(x = hwy, y = displ))
g1 = mpg |>
ggplot(aes(x = hwy, y = displ)) +
geom_point() +
theme_bw()
g1
g1 = mpg |>
ggplot(aes(x = hwy, y = displ)) +
geom_point() +
theme_minimal()
g1
mpg
mpg |>
ggplot(aes(x = hwy, y = displ, color = cty)) +
geom_point() +
theme_minimal()
# Using numerical variable 'cty' to map to colour
g2 = mpg |>
ggplot(aes(x = hwy, y = displ, color = cty)) +
geom_point() +
theme_minimal()
g2
g3 = mpg |>
ggplot(aes(x = hwy, y = displ, size = cty)) +
geom_point() +
theme_minimal()
g3
g3 = mpg |>
ggplot(aes(x = hwy, y = displ, size = cty)) +
geom_point(alpha = 0.5) +
theme_minimal()
g3
g4 = mpg |>
ggplot(aes(x = hwy, y = displ,
color = cty, size = cty)) +
geom_point(alpha = 0.5) +
theme_minimal()+
labs(caption = "cty mapped to size and color")
g4
mpg |>
ggplot(aes(x = hwy, y = displ, shape = cty)) +
geom_point(alpha = 0.5) +
theme_minimal()+
labs(caption = "cty mapped to shape")
gridExtra::grid.arrange(g1, g2, g3, g4, ncol = 2)
#| label: fig-q3-Exercise-2.5.5
#| fig-cap: "Experiment with mapping line width to a third variable"
mpg |>
ggplot(aes(x = hwy, y = displ,
linewidth = cty)) +
geom_point() +
theme_minimal()
?ggplot
mpg |>
ggplot(aes(x=hwy, y = cty,
size = displ,
color = displ)) +
geom_point() +
theme_classic()
pmg
mpg
mpg |>
ggplot(aes(x=hwy, y = cty,
size = class,
color = class)) +
geom_point() +
theme_classic()
mpg |>
ggplot(aes(x=hwy, y = cty,
size = class,
color = class)) +
geom_point() +
theme_classic()
mpg |>
ggplot(aes(x=hwy, y = cty,
size = class,
color = class,
shape = class)) +
geom_point() +
theme_classic()
mpg |>
ggplot(aes(x=hwy, y = cty,
size = class,
color = class,
shape = class)) +
geom_point(alpha = 0.5) +
theme_classic()
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)")
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
facet_wrap(~species) +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)")
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
caption = "No relation is apparent")
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
caption = "Colouring  by species reveals relations")
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
facet_wrap(~species) +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)")
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
caption = "Colouring  by species reveals relations")
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
caption = "No relation is apparent")
lay = rbind(c(1,2),
c(3,3))
View(lay)
#| label: fig-q5-Exercise-2.5.5
#| fig-cap: "Adding color by species reveals a strong relationship"
p1 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
caption = "No relation is apparent")
p2 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
caption = "Colouring  by species reveals relations")
p3 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
facet_wrap(~species) +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)")
lay = rbind(c(1,2),
c(3,3))
gridExtra::grid.arrange(p1, p2, p3, layout_matrix = lay)
#| label: fig-q5-Exercise-2.5.5
#| fig-cap: "Adding color by species reveals a strong relationship"
p1 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "No relation is apparent")
p2 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "Colouring  by species reveals relations")
p3 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
facet_wrap(~species) +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "Faceting also reveals the relations")
lay = rbind(c(1,2),
c(3,3))
gridExtra::grid.arrange(p1, p2, p3, layout_matrix = lay)
#| label: fig-q5-Exercise-2.5.5
#| fig-cap: "Adding color by species reveals a strong relationship"
p1 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "No relation is apparent")
p2 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "Colouring  by species reveals relations")
p3 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
facet_wrap(~species) +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "Faceting also reveals the relations")
lay = rbind(c(1,2,2),
c(3,3,3))
gridExtra::grid.arrange(p1, p2, p3, layout_matrix = lay)
#| label: fig-q5-Exercise-2.5.5
#| fig-cap: "Adding color by species reveals a strong relationship"
p1 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "No relation is apparent")
p2 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "Colouring  by species reveals relations")
p3 = penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
facet_wrap(~species) +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)",
subtitle = "Faceting also reveals the relations")
lay = rbind(c(1,1,2,2,2),
c(3,3,3,3,3))
gridExtra::grid.arrange(p1, p2, p3, layout_matrix = lay)
ggplot(data = penguins,
mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
color = species,
shape = species)) +
geom_point() +
labs(color = "Species")
ggplot(data = penguins,
mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
color = species,
shape = species)) +
geom_point()
ggplot(data = penguins,
mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
color = species,
shape = species)) +
geom_point() +
labs(color = "Species", shape = "Species")
#| label: fig-q7-Exercises-2.5.5
#| fig-cap: The two stacked bar plots produced by the code
#| fig-asp: 0.5
g1 = ggplot(penguins, aes(x = island,
fill = species)) +
geom_bar(position = "fill") +
labs(subtitle = "Sub-figure A")
g2 = ggplot(penguins, aes(x = species,
fill = island)) +
geom_bar(position = "fill") +
labs(subtitle = "Sub-figure B")
gridExtra::grid.arrange(g1, g2, ncol = 2)
