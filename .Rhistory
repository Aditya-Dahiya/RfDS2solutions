dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone),
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4
f4
f4 |>
select(-c(year, month, day)) |>
View()
f4 = flights_airports |>
select(year, month, day, dep_time, sched_dep_time, dep_delay,
arr_time, sched_arr_time, arr_delay,
flight, origin, dest,air_time, distance, name, tzone) |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone)
)
f4 |>
slice(201)
f4 |>
slice(201) |>
View()
f4 |>
slice(201) |>
View()
f4 |>
mutate(
air_time = air_time,
air_time_calc = interval(dep_time, arr_time)/minutes(1)
)
f4 |>
mutate(
air_time = air_time,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4 |>
slice(201) |>
mutate(
air_time = air_time,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4 |>
slice(201) |>
mutate(
air_time = air_time,
tzone = tzone,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4 |>
slice(202) |>
mutate(
air_time = air_time,
tzone = tzone,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
library(tidyverse)
#| label: setup
library(tidyverse)
library(janitor)
library(gt)
library(gtExtras)
?fill
?fill
squirrels <- tibble::tribble(
~group,    ~name,     ~role,     ~n_squirrels,
1,      "Sam",    "Observer",   NA,
1,     "Mara", "Scorekeeper",    8,
1,    "Jesse",    "Observer",   NA,
1,      "Tom",    "Observer",   NA,
2,     "Mike",    "Observer",   NA,
2,  "Rachael",    "Observer",   NA,
2,  "Sydekea", "Scorekeeper",   14,
2, "Gabriela",    "Observer",   NA,
3,  "Derrick",    "Observer",   NA,
3,     "Kara", "Scorekeeper",    9,
3,    "Emily",    "Observer",   NA,
3, "Danielle",    "Observer",   NA
)
squirrels
squirrels %>%
dplyr::group_by(group) %>%
fill(n_squirrels, .direction = "downup") %>%
dplyr::ungroup()
squirrels %>%
dplyr::group_by(group) %>%
fill(n_squirrels, .direction = "updown") %>%
dplyr::ungroup()
# The values are inconsistently missing by position within the group
# Use .direction = "downup" to fill missing values in both directions
squirrels %>%
fill(n_squirrels, .direction = "updown")
# The values are inconsistently missing by position within the group
# Use .direction = "downup" to fill missing values in both directions
squirrels %>%
fill(n_squirrels, .direction = "up")
# The values are inconsistently missing by position within the group
# Use .direction = "downup" to fill missing values in both directions
squirrels %>%
fill(n_squirrels, .direction = "updown")
# The values are inconsistently missing by position within the group
# Use .direction = "downup" to fill missing values in both directions
squirrels %>%
fill(n_squirrels, .direction = "downup")
# The values are inconsistently missing by position within the group
# Use .direction = "downup" to fill missing values in both directions
squirrels %>%
fill(n_squirrels, .direction = "down")
naniar::common_na_strings
students <- tibble(
Student_Name = c("Alice", "Bob", "Charlie", "David", "Eve", "Frank", "Grace", "Helen", "Ivy", "Jack"),
Exam_1 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_2 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_3 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_4 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_5 = sample(c(NA, 60:100), 10, replace = TRUE)
)
students
students <- tibble(
Student_Name = c("Alice", "Bob", "Charlie", "David", "Eve", "Frank", "Grace", "Helen", "Ivy", "Jack"),
Exam_1 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_2 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_3 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_4 = sample(c(NA, 60:100), 10, replace = TRUE),
Exam_5 = sample(c(NA, 60:100), 10, replace = TRUE)
)
students
students <- tibble(
Student_Name = c("Alice", "Bob", "Charlie", "David", "Eve", "Frank", "Grace", "Helen", "Ivy", "Jack"),
Exam_1 = sample(c(NA, 60:70), 10, replace = TRUE),
Exam_2 = sample(c(NA, 60:70), 10, replace = TRUE),
Exam_3 = sample(c(NA, 60:70), 10, replace = TRUE),
Exam_4 = sample(c(NA, 60:70), 10, replace = TRUE),
Exam_5 = sample(c(NA, 60:70), 10, replace = TRUE)
)
students
?coalesce
sample(c(1:5, NA, NA, NA))
sample(c(1:5, NA, NA, NA)) |>
coalesce()
sample(c(1:5, NA, NA, NA)) |>
coalesce(, 9)
sample(c(1:5, NA, NA, NA))
sample(c(1:5, NA, NA, NA)) |>
coalesce(, 9)
coalesce(sample(c(1:5, NA, NA, NA)), 9)
temp = sample(c(1:5, NA, NA, NA))
coalesce(temp, 9)
temp
coalesce(temp, 9)
students
students |>
na_if(70)
na_if(students$Exam_3, 70)
na_if(students$Exam_2, 70)
#| label: temp-tester
?full_seq
library(nycflights13)
flights |>
distinct(faa = dest)
flights |>
distinct(dest)
library(nycflights13)
data("flights")
library(nycflights13)
data("flights")
data("planes")
flights |>
distinct(tailnum) |>
anti_join(planes)
flights |>
distinct(tailnum)
flights |>
distinct(tailnum) |>
anti_join(planes)
flights |>
distinct(tailnum, carrier)
flights |>
distinct(tailnum)
flights |>
distinct(tailnum, carrier)
flights |>
distinct(tailnum, carrier) |>
anti_join(planes)
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier)
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier) |>
arrange(desc(n))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
group_by(carrier) |>
summarize(number = n())
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
group_by(carrier) |>
summarize(number = n()) |>
arrange(desc(n))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
group_by(carrier) |>
summarize(number = n()) |>
arrange(desc(number))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier)
?count
arrange(desc(number_of_tailnums_missing_in_planes))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "number_of_tailnums_missing_in_planes") |>
arrange(desc(number_of_tailnums_missing_in_planes))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "number_of_tailnums_missing_in_planes") |>
arrange(desc(number_of_tailnums_missing_in_planes)) |>
gt() |>
gt_theme_538() |>
cols_label_with(.fn = janitor::make_clean_names(case = "title") )
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "number_of_tailnums_missing_in_planes") |>
arrange(desc(number_of_tailnums_missing_in_planes)) |>
gt() |>
gt_theme_538() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
distinct(carrier)
car_vec = flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
distinct(carrier)
flights |>
filter(carrier %in% car_vec) |>
group_by(carrier) |>
summarize(total_number_of_aircraft_in_flights = n())
flights |>
filter(carrier %in% car_vec)
car_vec
car_vec = flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
distinct(carrier) |>
as_vector() |>
unname()
flights |>
filter(carrier %in% car_vec) |>
group_by(carrier)
flights |>
filter(carrier %in% car_vec) |>
group_by(carrier) |>
summarize(total_number_of_aircraft_in_flights = n())
total_tails = flights |>
filter(carrier %in% car_vec) |>
group_by(carrier) |>
summarize(total_number_of_aircraft_in_flights = n())
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "number_of_tailnums_missing_in_planes") |>
arrange(desc(number_of_tailnums_missing_in_planes))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "number_of_tailnums_missing_in_planes") |>
arrange(desc(number_of_tailnums_missing_in_planes)) |>
full_join(total_tails)
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "number_of_tailnums_missing_in_planes") |>
arrange(desc(number_of_tailnums_missing_in_planes)) |>
full_join(total_tails) |>
mutate(percentage_missing = 100*number_of_tailnums_missing_in_planes/total_number_of_aircraft_in_flights)
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "missing_tailnums") |>
arrange(desc(missing_tailnums)) |>
full_join(total_tails) |>
mutate(percentage_missing = 100*missing_tailnums/total_aircrafts) |>
gt() |>
gt_theme_538() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
# Find total tailnums for these carriers
total_tails = flights |>
filter(carrier %in% car_vec) |>
group_by(carrier) |>
summarize(total_aircrafts = n())
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "missing_tailnums") |>
arrange(desc(missing_tailnums)) |>
full_join(total_tails) |>
mutate(percentage_missing = 100*missing_tailnums/total_aircrafts) |>
gt() |>
gt_theme_538() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "missing_tailnums") |>
arrange(desc(missing_tailnums)) |>
full_join(total_tails) |>
mutate(percentage_missing = missing_tailnums/total_aircrafts) |>
gt() |>
gt_theme_538() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
fmt_percent(columns = percentage_missing)
flights |>
filter(carrier %in% car_vec) |>
group_by(carrier) |>
summarize(total_aircrafts = distinct(tailnum))
flights |>
distinct(tailnum)
flights |>
filter(carrier %in% car_vec) |>
group_by(carrier)
# Find total tailnums for these carriers
total_tails = flights |>
filter(carrier %in% car_vec) |>
group_by(carrier) |>
summarize(
total_aircrafts = n_distinct(tailnum)
)
total_tails
?n_distinct
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "missing_tailnums") |>
arrange(desc(missing_tailnums)) |>
full_join(total_tails) |>
mutate(percentage_missing = missing_tailnums/total_aircrafts) |>
gt() |>
gt_theme_538() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
fmt_percent(columns = percentage_missing)
flights |>
distinct(tailnum, carrier) |>
anti_join(planes) |>
count(carrier, name = "missing_tailnums") |>
full_join(total_tails) |>
mutate(percentage_missing = missing_tailnums/total_aircrafts) |>
arrange(desc(percentage_missing)) |>
gt() |>
gt_theme_538() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
fmt_percent(columns = percentage_missing) |>
tab_style(
style = list(cell_text(weight = "bold") ),
locations = cells_body(columns = percentage_missing))
library(naniar)
library(visdat)
vis_dat(flights)
visdat(planes)
vis_dat(planes)
?vis_dat
# Create a tibble with data on 50 cities
cities <- tribble(
~City,           ~Population, ~Latitude, ~Longitude,  ~Country,           ~State,
"New York",      8398748,    40.7128,   -74.0060,   "USA",              "New York",
"Los Angeles",   3990456,    34.0522,   -118.2437,  "USA",              "California",
"Chicago",       2705994,    41.8781,   -87.6298,   "USA",              "Illinois",
"Houston",       2320268,    29.7604,   -95.3698,   "USA",              "Texas",
"Phoenix",       1680992,    33.4484,   -112.0740,  "USA",              "Arizona",
"Philadelphia",  1584064,    39.9526,   -75.1652,   "USA",              "Pennsylvania",
"San Antonio",   1547253,    29.4241,   -98.4936,   "USA",              "Texas",
"San Diego",     1423851,    32.7157,   -117.1611,  "USA",              "California",
"Dallas",        1343573,    32.7767,   -96.7970,   "USA",              "Texas",
"San Jose",      1030119,    37.3541,   -121.9552,  "USA",              "California",
"Austin",        964254,     30.2672,   -97.7431,   "USA",              "Texas",
"Jacksonville",  903889,     30.3322,   -81.6557,   "USA",              "Florida",
"Fort Worth",    895008,     32.7555,   -97.3308,   "USA",              "Texas",
"Columbus",      892533,     39.9612,   -82.9988,   "USA",              "Ohio",
"Charlotte",     872498,     35.2271,   -80.8431,   "USA",              "North Carolina",
"San Francisco", 883305,     37.7749,   -122.4194,  "USA",              "California",
"Indianapolis",  867125,     39.7684,   -86.1581,   "USA",              "Indiana",
"Seattle",       744955,     47.6062,   -122.3321,  "USA",              "Washington",
"Denver",        716492,     39.7392,   -104.9903,  "USA",              "Colorado",
"Washington",    702455,     38.8951,   -77.0364,   "USA",              "D.C.",
"Boston",        694583,     42.3601,   -71.0589,   "USA",              "Massachusetts",
"El Paso",       682669,     31.7619,   -106.4850,  "USA",              "Texas",
"Nashville",     670820,     36.1627,   -86.7816,   "USA",              "Tennessee",
"Detroit",       672662,     42.3314,   -83.0458,   "USA",              "Michigan",
"Oklahoma City", 655057,     35.4676,   -97.5164,   "USA",              "Oklahoma",
"Portland",      654741,     45.5051,   -122.6750,  "USA",              "Oregon",
"Las Vegas",     651319,     36.1699,   -115.1398,  "USA",              "Nevada",
"Memphis",       651073,     35.1495,   -90.0490,   "USA",              "Tennessee",
"Louisville",    617638,     38.2527,   -85.7585,   "USA",              "Kentucky",
"Baltimore",     611648,     39.2904,   -76.6122,   "USA",              "Maryland",
"Milwaukee",     590157,     43.0389,   -87.9065,   "USA",              "Wisconsin",
"Albuquerque",   560513,     35.0844,   -106.6506,  "USA",              "New Mexico",
"Tucson",        545975,     32.2226,   -110.9747,  "USA",              "Arizona",
"Fresno",        522277,     36.7468,   -119.7726,  "USA",              "California",
"Sacramento",    508529,     38.5816,   -121.4944,  "USA",              "California",
"Mesa",          508958,     33.4152,   -111.8315,  "USA",              "Arizona",
"Kansas City",   495327,     39.0997,   -94.5786,   "USA",              "Missouri",
"Atlanta",       498044,     33.7490,   -84.3880,   "USA",              "Georgia",
"Long Beach",    466742,     33.7701,   -118.1937,  "USA",              "California",
"Colorado Springs", 478221,  38.8339,   -104.8214,  "USA",              "Colorado",
"Raleigh",       474069,     35.7796,   -78.6382,   "USA",              "North Carolina",
"Miami",         467963,     25.7617,   -80.1918,   "USA",              "Florida",
"Virginia Beach",   449974,  36.8529,   -75.9780,   "USA",              "Virginia",
"Omaha",         468262,     41.2565,   -95.9345,   "USA",              "Nebraska",
"Oakland",       429082,     37.8044,   -122.2711,  "USA",              "California",
"Minneapolis",   429606,     44.9778,   -93.2650,   "USA",              "Minnesota",
"Tulsa",         401190,     36.1540,   -95.9928,   "USA",              "Oklahoma",
"Arlington",     398854,     32.7357,   -97.1081,   "USA",              "Texas",
"New Orleans",   390845,     29.9511,   -90.0715,   "USA",              "Louisiana",
"Wichita",       390591,     37.6860,   -97.3356,   "USA",              "Kansas"
)
library(naniar)
library(visdat)
# Create a tibble with data on 50 cities
cities <- tribble(
~City,           ~Population, ~Latitude, ~Longitude,  ~Country,           ~State,
"New York",      8398748,    40.7128,   -74.0060,   "USA",              "New York",
"Los Angeles",   3990456,    34.0522,   -118.2437,  "USA",              "California",
"Chicago",       2705994,    41.8781,   -87.6298,   "USA",              "Illinois",
"Houston",       2320268,    29.7604,   -95.3698,   "USA",              "Texas",
"Phoenix",       1680992,    33.4484,   -112.0740,  "USA",              "Arizona",
"Philadelphia",  1584064,    39.9526,   -75.1652,   "USA",              "Pennsylvania",
"San Antonio",   1547253,    29.4241,   -98.4936,   "USA",              "Texas",
"San Diego",     1423851,    32.7157,   -117.1611,  "USA",              "California",
"Dallas",        1343573,    32.7767,   -96.7970,   "USA",              "Texas",
"San Jose",      1030119,    37.3541,   -121.9552,  "USA",              "California",
"Austin",        964254,     30.2672,   -97.7431,   "USA",              "Texas",
"Jacksonville",  903889,     30.3322,   -81.6557,   "USA",              "Florida",
"Fort Worth",    895008,     32.7555,   -97.3308,   "USA",              "Texas",
"Columbus",      892533,     39.9612,   -82.9988,   "USA",              "Ohio",
"Charlotte",     872498,     35.2271,   -80.8431,   "USA",              "North Carolina",
"San Francisco", 883305,     37.7749,   -122.4194,  "USA",              "California",
"Indianapolis",  867125,     39.7684,   -86.1581,   "USA",              "Indiana",
"Seattle",       744955,     47.6062,   -122.3321,  "USA",              "Washington",
"Denver",        716492,     39.7392,   -104.9903,  "USA",              "Colorado",
"Washington",    702455,     38.8951,   -77.0364,   "USA",              "D.C.",
"Boston",        694583,     42.3601,   -71.0589,   "USA",              "Massachusetts",
"El Paso",       682669,     31.7619,   -106.4850,  "USA",              "Texas",
"Nashville",     670820,     36.1627,   -86.7816,   "USA",              "Tennessee",
"Detroit",       672662,     42.3314,   -83.0458,   "USA",              "Michigan",
"Oklahoma City", 655057,     35.4676,   -97.5164,   "USA",              "Oklahoma",
"Portland",      654741,     45.5051,   -122.6750,  "USA",              "Oregon",
"Las Vegas",     651319,     36.1699,   -115.1398,  "USA",              "Nevada",
"Memphis",       651073,     35.1495,   -90.0490,   "USA",              "Tennessee",
"Louisville",    617638,     38.2527,   -85.7585,   "USA",              "Kentucky",
"Baltimore",     611648,     39.2904,   -76.6122,   "USA",              "Maryland",
"Milwaukee",     590157,     43.0389,   -87.9065,   "USA",              "Wisconsin",
"Albuquerque",   560513,     35.0844,   -106.6506,  "USA",              "New Mexico",
"Tucson",        545975,     32.2226,   -110.9747,  "USA",              "Arizona",
"Fresno",        522277,     36.7468,   -119.7726,  "USA",              "California",
"Sacramento",    508529,     38.5816,   -121.4944,  "USA",              "California",
"Mesa",          508958,     33.4152,   -111.8315,  "USA",              "Arizona",
"Kansas City",   495327,     39.0997,   -94.5786,   "USA",              "Missouri",
"Atlanta",       498044,     33.7490,   -84.3880,   "USA",              "Georgia",
"Long Beach",    466742,     33.7701,   -118.1937,  "USA",              "California",
"Colorado Springs", 478221,  38.8339,   -104.8214,  "USA",              "Colorado",
"Raleigh",       474069,     35.7796,   -78.6382,   "USA",              "North Carolina",
"Miami",         467963,     25.7617,   -80.1918,   "USA",              "Florida",
"Virginia Beach",   449974,  36.8529,   -75.9780,   "USA",              "Virginia",
"Omaha",         468262,     41.2565,   -95.9345,   "USA",              "Nebraska",
"Oakland",       429082,     37.8044,   -122.2711,  "USA",              "California",
"Minneapolis",   429606,     44.9778,   -93.2650,   "USA",              "Minnesota",
"Tulsa",         401190,     36.1540,   -95.9928,   "USA",              "Oklahoma",
"Arlington",     398854,     32.7357,   -97.1081,   "USA",              "Texas",
"New Orleans",   390845,     29.9511,   -90.0715,   "USA",              "Louisiana",
"Wichita",       390591,     37.6860,   -97.3356,   "USA",              "Kansas"
)
# Randomly select indices to replace with NA
indices_to_replace <- sample(1:length(cities), num_cells_to_replace)
# Replace the selected cells with NA
cities[indices_to_replace] <- NA
# Calculate the number of cells to replace with NA
num_cells_to_replace <- round(0.2 * length(cities), 0)
# Randomly select indices to replace with NA
indices_to_replace <- sample(1:length(cities), num_cells_to_replace)
# Replace the selected cells with NA
cities[indices_to_replace] <- NA
cities
num_cells_to_replace
# Calculate the number of cells to replace with NA
num_cells_to_replace <- round(0.2 * nrow(cities), 0)
num_cells_to_replace
?replace_with_na
data("planes")
planes |> vis_dat()
