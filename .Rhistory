ungroup() |>
gt() |>
cols_label(
distance = "Distance (in miles)",
n = "Number of flights in 2013"
) |>
gtExtras::gt_theme_538()
flights |>
filter(dest == "EGE")
flights |>
filter(dest == "EGE") |>
group_by(orgin) |>
summarise(
mean_dist = mean(distance, na.rm = TRUE),
sd_dist = sd(distance, na.rm = TRUE),
prop_cancelled = mean(is.na(dep_time)),
nos = n()
)
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_dist = mean(distance, na.rm = TRUE),
sd_dist = sd(distance, na.rm = TRUE),
prop_cancelled = mean(is.na(dep_time)),
nos = n()
)
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
SD_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, SD_of_distance))
?make_clean_names
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
SD_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, SD_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_guardian()
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_pff()
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_nytimes()
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_guardian()
)
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_dot_matrix()
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_538()
flights |>
filter(dest == "EGE") |>
group_by(origin) |>
summarise(
mean_of_distance = mean(distance, na.rm = TRUE),
std_dev_of_distance = sd(distance, na.rm = TRUE),
proportion_of_cancelled_flights = mean(is.na(dep_time)),
number_of_flights = n()
) |>
gt() |>
fmt_percent(columns = proportion_of_cancelled_flights) |>
fmt_number(decimals = 2,
columns = c(mean_of_distance, std_dev_of_distance)) |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gtExtras::gt_theme_pff()
?gt_theme_pff
library(tidyverse)
library(babynames)
library(babynames)
babynames::babynames
x = "He said \" That's amazing!\""
x
print(x)
str_view(x)
str_view(x)
x = "\\a\\b\\c\\d"
str_view(x)
print(x)
?Quotes
x = "\\\\\\\\\\\\"
print(x)
str_view(x)
"\U0001f604"
"\u00b5"
"\\\\\\\\\\\\"
str_view(x)
"one\ttwo"
str_view("one\ttwo")
"\u00a0"
str_view("\u00a0")
x <- "This\u00a0is\u00a0tricky"
print(x)
str_view(x)
title = c("A", "BB", "CCC")
str_c("\\section{", title, "}")
library(tidyverse)
str_c("\\section{", title, "}")
str_glue("\\section{{{title}}}")
str_glue("\\\\section{{{title}}}")
?str_flatten
str_flatten(title)
str_flatten(title, ", ")
str_flatten(title, ", ", last = ", and")
str_flatten(title, ", ", last = ", and, ")
str_flatten(title, ", ", last = " and, ")
str_flatten(title, ", ", last = " and ")
str_flatten_comma(title)
str_c("hi ", NA)
paste0("hi ", NA)
str_c(letters[1:2], letters[1:3])
#| label: setup
#| echo: false
library(tidyverse)
library(babynames)
library(gt)
library(gtExtras)
df1 = babynames |>
mutate(name_length = str_length(name)) |>
count(name_length, wt = n) |>
rename(correct_frequency = n)
df2 = babynames |>
mutate(name_length = str_length(name)) |>
count(name_length) |>
rename(wrong_freq_without_weights = n)
inner_join(df1, df2, by = "name_length")
inner_join(df1, df2, by = "name_length") |>
gt() |>
fmt_number(-name_length , decimals = 0)
?cols_label_with
inner_join(df1, df2, by = "name_length") |>
gt() |>
fmt_number(-name_length , decimals = 0) |>
cols_label_with(fn = toupper)
inner_join(df1, df2, by = "name_length") |>
gt() |>
fmt_number(-name_length , decimals = 0) |>
cols_label_with(
fn = ~ janitor::make_clean_names(., case = "title")
)
#| tbl-cap: "The distribution of the length of babynames"
#| label: tbl-q1b-ex5
#| code-fold: true
df1 = babynames |>
mutate(name_length = str_length(name)) |>
count(name_length, wt = n) |>
rename(correct_frequency = n)
df2 = babynames |>
mutate(name_length = str_length(name)) |>
count(name_length) |>
rename(wrong_frequency_without_weights = n)
inner_join(df1, df2, by = "name_length") |>
gt() |>
fmt_number(-name_length , decimals = 0) |>
cols_label_with(
fn = ~ janitor::make_clean_names(., case = "title")
) |>
gt_theme_538()
data("babynames")
View(babynames)
?%/%
5 %/% 2
5 %% 2
babynames |>
mutate(
name_length = str_length(name),
middle_chr_num = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5)
)
babynames |>
mutate(
name_length = str_length(name),
middle_let_num = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_let_num,
end = middle_let_num)
)
babynames |>
mutate(
name_length = str_length(name),
middle_letter_start = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter_end = if_else(name_length %% 2 == 0,
(name_length/2) + 1,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_letter_start,
end = middle_letter_end)
)
babynames |>
mutate(
name_length = str_length(name),
middle_letter_start = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter_end = if_else(name_length %% 2 == 0,
(name_length/2) + 1,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_letter_start,
end = middle_letter_end)
) |>
select(-c(year, sex, n, prop))
babynames |>
mutate(
name_length = str_length(name),
middle_letter_start = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter_end = if_else(name_length %% 2 == 0,
(name_length/2) + 1,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_letter_start,
end = middle_letter_end)
) |>
select(-c(year, sex, n, prop)) |>
janitor::make_clean_names(case = "title")
babynames |>
mutate(
name_length = str_length(name),
middle_letter_start = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter_end = if_else(name_length %% 2 == 0,
(name_length/2) + 1,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_letter_start,
end = middle_letter_end)
) |>
select(-c(year, sex, n, prop)) |>
gt() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
babynames |>
mutate(
name_length = str_length(name),
middle_letter_start = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter_end = if_else(name_length %% 2 == 0,
(name_length/2) + 1,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_letter_start,
end = middle_letter_end)
) |>
select(-c(year, sex, n, prop)) |>
slice_head(n = 10)
df3 = babynames |>
mutate(
name_length = str_length(name),
middle_letter_start = if_else(name_length %% 2 == 0,
name_length/2,
(name_length/2) + 0.5),
middle_letter_end = if_else(name_length %% 2 == 0,
(name_length/2) + 1,
(name_length/2) + 0.5),
middle_letter = str_sub(name,
start = middle_letter_start,
end = middle_letter_end)
) |>
select(-c(year, sex, n, prop)) |>
slice_head(n = 10)
df3 |>
gt() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title"))
df3 |>
gt() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
gt_theme_538()
df3 |>
gt() |>
cols_label_with(fn = ~ janitor::make_clean_names(., case = "title")) |>
cols_align(align = "center",
columns = -name) |>
gt_theme_538()
babynames
babynames |>
mutate(
name_length = str_length(name),
name_start = str_sub(name, 1, 1),
name_end = str_sub(name, -1, -1)
)
df4 = babynames |>
mutate(
name_length = str_length(name),
name_start = str_sub(name, 1, 1),
name_end = str_sub(name, -1, -1)
)
df4 |>
group_by(year) |>
count(name_length, wt = n)
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
n_distinct(year)
df4 |>
n_distinct(year)
n_distinct(df4$year)
df4 |>
group_by(year) |>
count(name_length, wt = n)
?mean
?weighted.mean
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n))
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line()
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_smooth()
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2020, 40))
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2000, 40))
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2000, 20))
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2000, 20)) +
geom_rect(aes(xmin = 1890, xmax = 1920,
ymin = 0, ymax = Inf),
alpha = 0.4, col = "grey")
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2000, 20)) +
geom_rect(aes(xmin = 1890, xmax = 1920,
ymin = 0, ymax = Inf),
col = "grey", alpha = 0.4) +
coord_cartesian(ylim = c(5, 6.5))
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2000, 20)) +
coord_cartesian(ylim = c(5, 6.5))
df4 |>
group_by(year) |>
count(name_length, wt = n) |>
summarise(mean_length = weighted.mean(name_length, w = n)) |>
ggplot(aes(x = year, y = mean_length)) +
geom_line() +
theme_classic() +
labs(y = "Average name length",
x = "Year") +
scale_x_continuous(breaks = seq(1880, 2000, 20))
