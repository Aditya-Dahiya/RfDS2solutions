geom_text(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt)
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
annt_con = "Convertibles generally have lower HP"
annt_cup = "Fuel efficiency decreases with rising HP"
annt_sed = "Sedans generally have lower HP"
annt_hbk = "Data-set has only two hatchbacks"
annt_df = tibble(
bdy_style = as_vector(distinct(gtcars, bdy_style)),
annt = c(annt_con, annt_cup, annt_sed, annt_hbk),
x_annt = 800,
y_annt = 27.5
) |>
mutate(bdy_style = str_to_title(bdy_style))
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To makr mpg_h comparable visually across facets
facet_wrap(~bdy_style, ncol = 4) +
geom_text(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647"
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
?str_wrap
annt_df = tibble(
bdy_style = as_vector(distinct(gtcars, bdy_style)),
annt = str_wrap(c(annt_con, annt_cup, annt_sed, annt_hbk),
width = 15),
x_annt = 800,
y_annt = 27.5
) |>
mutate(bdy_style = str_to_title(bdy_style))
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To makr mpg_h comparable visually across facets
facet_wrap(~bdy_style, ncol = 4) +
geom_text(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647"
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
geom_text()
?geom_text
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To makr mpg_h comparable visually across facets
facet_wrap(~bdy_style, ncol = 4) +
geom_text(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
family = "Times New Roman",
fontface = "Bold"
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To makr mpg_h comparable visually across facets
facet_wrap(~bdy_style, ncol = 4) +
geom_text(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
family = "Times New Roman",
fontface = "bold"
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To make mpg_h comparable visually across facets,
# we select layout of 4 columns
facet_wrap(~bdy_style, ncol = 4) +
geom_text(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
fontface = "bold"
) +
theme_classic() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
#| label: fig-q3c-ex3
#| fig-cap: "Scatter-plot of highway mileage vs. horsepower, for different body type of cars - with different annotations in each facet"
#| code-fold: true
annt_con = "Convertibles generally have lower HP"
annt_cup = "Fuel efficiency decreases with rising HP"
annt_sed = "Sedans generally have lower HP"
annt_hbk = "Data-set has only two hatchbacks"
annt_df = tibble(
bdy_style = as_vector(distinct(gtcars, bdy_style)),
annt = str_wrap(c(annt_con, annt_cup, annt_sed, annt_hbk),
width = 15),
x_annt = 800,
y_annt = 27.5
) |>
mutate(bdy_style = str_to_title(bdy_style))
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To make mpg_h comparable visually across facets,
# we select layout of 4 columns
facet_wrap(~bdy_style, ncol = 4) +
geom_label(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
fontface = "bold"
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
?geom_label
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To make mpg_h comparable visually across facets,
# we select layout of 4 columns
facet_wrap(~bdy_style, ncol = 4) +
geom_label(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
fontface = "bold"
label.size = NA
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To make mpg_h comparable visually across facets,
# we select layout of 4 columns
facet_wrap(~bdy_style, ncol = 4) +
geom_label(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
fontface = "bold"
label.size = NA
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To make mpg_h comparable visually across facets,
# we select layout of 4 columns
facet_wrap(~bdy_style, ncol = 4) +
geom_label(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
fontface = "bold",
label.size = NA
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
gtcars |>
# Cosmetic improvements for labelling in plot
mutate(bdy_style = str_to_title(bdy_style)) |>
mutate(drivetrain = case_when(
drivetrain == "awd" ~ "All-Wheel Drive",
drivetrain == "rwd" ~ "Rear-Wheel Drive"
)) |>
ggplot(aes(x = hp,
y = mpg_h,
color = drivetrain)) +
geom_point(size = 1.5) +
# To make mpg_h comparable visually across facets,
# we select layout of 4 columns
facet_wrap(~bdy_style, ncol = 4) +
geom_label(
data = annt_df,
mapping = aes(x = x_annt,
y = y_annt,
label = annt),
color = "#454647",
fontface = "bold",
label.size = 0.1
) +
theme_light() +
theme(legend.position = "bottom") +
labs(x = "Horsepower",
y = "Highway Fuel efficiency (miles per gallon)",
color = "Car's drivetrain",
title = "Higher HP lowers highway mileage",
caption = "Data grom gt package (gtcars)")
library(ggplot2)
# Create a basic scatter plot
data <- data.frame(x = c(1, 2, 3, 4, 5),
y = c(2, 4, 6, 8, 10))
p <- ggplot(data, aes(x, y)) +
geom_point() +
geom_label(aes(label = "Label"),
label.padding = unit(0.5, "lines"),  # Adjust padding
label.fill = "lightblue",           # Set fill color
label.color = "darkblue",           # Set border color
label.size = 5,                     # Set text size
label.r = unit(0.2, "lines"))       # Set corner radius
print(p)
?rect
?geom_label
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = rnorm(10, mean = x))
df1
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = rnorm(10, mean = x, sd = 0.2))
df1
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = rnorm(10, mean = 2*x, sd = 0.2))
tibble(x = 1:10,
y = 2*x + rnorm(10, mean = x, sd = 0.2))
df1 = tibble(x = 1:10,
y = 2*x + rnorm(10, mean = x, sd = 2))
df1
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = 2*x + rnorm(10))
df1
df1 |>
ggplot(aes(x = x, y = y)) +
geom_point()
df1 |>
ggplot(aes(x = x, y = y)) +
geom_point() +
geom_label(aes(label = "Label"),
label.padding = unit(0.5, "lines"),  # Adjust padding
label.fill = "lightblue",           # Set fill color
label.color = "darkblue",           # Set border color
label.size = 5,                     # Set text size
label.r = unit(0.2, "lines"))       # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_point() +
geom_label(aes(label = "Label"))
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"))
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = 0.5,         # Adjust padding
label.size = 5,              # Set text size
label.r = 0.3                # Set corner radius
)
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = 0.5,                # Adjust padding
label.size = 5,                     # Set text size
label.r = unit(0.2, "lines"))       # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(0.5, "lines"),  # Adjust padding
label.size = 5,                     # Set text size
label.r = unit(0.2, "lines"))       # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(0.1, "lines"),  # Adjust padding
label.size = 5,                     # Set text size
label.r = unit(0.3, "lines"))       # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 5,                     # Set text size
label.r = unit(0.3, "lines"))       # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                     # Set text size
label.r = unit(0.3, "lines"))       # Set corner radius
?rect
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                     # Set text size
label.r = unit(0.3, "lines"),
label.background = rect(col = "pink")
)       # Set corner radius
styler:::style_active_file()
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = 2*x + rnorm(10))
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(0.3, "lines"),      # Set corner radius
label.background = ggplot2::rect(fill = "lightblue",
color = "darkblue",
size = 1,
linetype = "dashed",
alpha = 0.5)
)
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = 2*x + rnorm(10))
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(0.3, "lines"),      # Set corner radius
label.background = rect(fill = "lightblue",
color = "darkblue",
size = 1,
linetype = "dashed",
alpha = 0.5)
)
# Create a basic scatter plot
df1 = tibble(x = 1:10,
y = 2*x + rnorm(10))
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = "Label"),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(0.3, "lines"))      # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(0.3, "lines"))      # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(1, "lines"))      # Set corner radius
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(1, "lines")) +      # Set corner radius
theme_classic()
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(1, "lines")) +      # Set corner radius
theme_void()
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x),
label.padding = unit(x/5, "lines"),  # Adjust padding
label.size = x/2,                    # Set text size
label.r = unit(x/5, "lines")) +      # Set corner radius
theme_void()
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x,
label.padding = unit(x/5, "lines"),  # Adjust padding
label.size = x/2,                    # Set text size
label.r = unit(x/5, "lines"))) +      # Set corner radius
theme_void()
df1 |>
ggplot(aes(x = x, y = y)) +
geom_label(aes(label = x),
label.padding = unit(1, "lines"),  # Adjust padding
label.size = 2,                    # Set text size
label.r = unit(1, "lines")) +      # Set corner radius
theme_void()
