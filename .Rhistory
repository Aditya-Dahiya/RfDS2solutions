mpg |>
mutate(cyl = as_factor(cyl)) |>
ggplot(aes(x = class,
y = displ,
fill = cyl,
group = cyl)) +
geom_boxplot(position = "dodge2")
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
library(gt)
data("mpg")
data("diamonds")
mpg
mpg |>
names()
mpg |>
str()
mpg |>
ggplot(aes(x = class,
y = hwy)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = as_factor(drv))) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = drv)) +
geom_boxplot()
#| label: fig-q4-ex6
#|
gridExtra::grid.arrange(
g +
geom_count() +
labs(title = "geom_count()"),
g +
geom_jitter() +
labs(title = "geom_jitter()"),
ncol = 2
)
#| label: fig-q3-ex6
#| fig-cap: "Use of arguments to control jittering in scatterplots"
g = ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic() +
labs(x = NULL, y = NULL)
gridExtra::grid.arrange(
g + geom_point() +
labs(title = "geom_point()"),
g + geom_jitter() +
labs(title = "geom_jitter()"),
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "jitter width = 0.1, height = 1"),
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "jitter width = 1, height = 0.1"),
ncol = 2,
nrow = 2)
#| label: fig-q4-ex6
#|
gridExtra::grid.arrange(
g +
geom_count() +
labs(title = "geom_count()"),
g +
geom_jitter() +
labs(title = "geom_jitter()"),
ncol = 2
)
ggplot(data = mtcars, aes(x = factor(cyl))) +
geom_count()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = drv)) +
geom_boxplot()
mpg |>
ggplot(aes(x = class,
y = hwy,
fill = drv)) +
geom_boxplot() +
theme_minimal()
mpg
gtcars
library(gt)
gtcars |>
str()
gtcars |>
summarytools::dfSummary() |> view()
gtcars |>
summarytools::dfSummary() |> view()
gtcars |>
summarytools::dfSummary()
gtcars |>
ggplot(aes(x = bdy_style, fill = bdy_style)) |>
geom_bar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar() +
coord_polar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = bdy_style,
fill = bdy_style,
y = prop)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void()
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom",
legend.title = element_text("Body Style"))
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom",
legend.title = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom",
fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar() +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "black") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "darkgrey") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "white") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
?coord_polar
gtcars |>
ggplot(aes(x = 1,
fill = bdy_style)) +
geom_bar(color = "white") +
coord_polar(theta = "y") +
theme_void() +
theme(legend.position = "bottom") +
labs(fill = "Body Style")
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
library(gt)
data("mpg")
data("diamonds")
?coord_quickmap
?map_data
map()
maps::worldMapEnv
cn = map_data("canada")
cn = map_data("cn")
cn = map_data("world")
cn |>
ggplot(aes(x = long,
y = lat)) +
geom_map()
cn |>
ggplot(aes(x = long,
y = lat)) +
geom_polygon()
View(cn)
View(cn)
cn |>
ggplot(aes(x = long,
y = lat,
group = region)) +
geom_polygon()
cn |>
ggplot(aes(x = long,
y = lat,
group = region)) +
geom_polygon() +
theme_map()
cn |>
ggplot(aes(x = long,
y = lat,
group = region)) +
geom_polygon() +
ggthemes::theme_map()
View(cn)
cn |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon() +
ggthemes::theme_map()
cn |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon() +
ggthemes::theme_map()
cn |>
ggplot(aes(x = long,
y = lat,
group = group,
fill = region)) +
geom_polygon() +
ggthemes::theme_map()
cn |>
ggplot(aes(x = long,
y = lat,
group = group,
fill = region)) +
geom_polygon() +
ggthemes::theme_map() +
theme(legend.position = NULL)
cn |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon() +
ggthemes::theme_map()
cn = map_data("world") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon() +
ggthemes::theme_map()
cn
cn + coord_map
cn + coord_map()
cn + coord_quickmap()
cn + coord_map()
cn + coord_quickmap()
map_data("world")
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon() +
ggthemes::theme_map()
cn + coord_map()
cn + coord_quickmap()
cn + coord_map()
cn + coord_quickmap()
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group),
fill = "white") +
geom_polygon() +
ggthemes::theme_map()
cn + coord_map()
cn + coord_quickmap()
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "white") +
ggthemes::theme_map()
cn + coord_map()
cn + coord_quickmap()
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "white",
color = "darkgrey") +
ggthemes::theme_map()
cn + coord_map()
cn + coord_quickmap()
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "lightgrey",
color = "darkgrey") +
ggthemes::theme_map()
cn + coord_map()
cn + coord_quickmap()
system.time(cn + coord_map())
system.time(cn + coord_quickmap())
?system.time
?format
system.time(cn + coord_map()) |>
format(digits = 4)
format(system.time(cn + coord_map(), digits = 4)
format(system.time(cn + coord_map(), digits = 4))
system.time(cn + coord_map())
options(digits = 3)
system.time(cn + coord_map())
options(digits = 5)
system.time(cn + coord_map())
options(digits = 3)
system.time(cn + coord_map())
?options
system.time(cn + coord_map())[[3]]
class(system.time(cn + coord_map())[[3]])
format(system.time(cn + coord_map())[[3]], digits = 4)
format(system.time(cn + coord_quickmap())[[3]], digits = 4)
system.time(cn + coord_map())[[3]] > system.time(cn + coord_quickmap())[[3]]
system.time(cn + coord_map())[[3]]
system.time(cn + coord_quickmap())[[3]]
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
library(gt)
data("mpg")
data("diamonds")
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "lightgrey",
color = "darkgrey") +
ggthemes::theme_map()
options(digits = 3)
system.time(cn + coord_map())[[3]]
system.time(cn + coord_quickmap())[[3]]
system.time(cn + coord_map())[[3]] > system.time(cn + coord_quickmap())[[3]]
system.time(cn + coord_map())[[3]] < system.time(cn + coord_quickmap())[[3]]
system.time(cn + coord_map())[[3]] == system.time(cn + coord_quickmap())[[3]]
cn = map_data("world") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "lightgrey",
color = "darkgrey") +
ggthemes::theme_map()
options(digits = 3)
system.time(cn + coord_map())[[3]] == system.time(cn + coord_quickmap())[[3]]
system.time(cn + coord_map())[[3]] > system.time(cn + coord_quickmap())[[3]]
cn +
coord_map() +
labs(title = "Canada's map with coord_map()",
subtitle = "Computation time =")
cn + coord_quickmap() +
labs(title = "Canada's map with coord_quickmap()",
subtitle = "Computation time =")
cn +
coord_map() +
labs(title = "Canada's map with coord_map()")
cn + coord_quickmap() +
labs(title = "Canada's map with coord_quickmap()")
cn = map_data("world") |>
filter(region == "Canada") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "lightgrey",
color = "darkgrey") +
ggthemes::theme_map()
cn +
coord_map() +
labs(title = "Canada's map with coord_map()")
cn + coord_quickmap() +
labs(title = "Canada's map with coord_quickmap()")
gridExtra::grid.arrange(
cn +
coord_map() +
labs(title = "Canada's map with coord_map()"),
cn + coord_quickmap() +
labs(title = "Canada's map with coord_quickmap()"),
ncol = 2)
cg = map_data("world") |>
filter(region == "Congo") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "lightgrey",
color = "darkgrey") +
ggthemes::theme_map()
gridExtra::grid.arrange(
cg +
coord_map() +
labs(title = "Canada's map with coord_map()"),
cg + coord_quickmap() +
labs(title = "Canada's map with coord_quickmap()"),
ncol = 2)
map_data("world") |>
distinct(region)
cg = map_data("world") |>
filter(region == "Democratic Republic of the Congo") |>
ggplot(aes(x = long,
y = lat,
group = group)) +
geom_polygon(fill = "lightgrey",
color = "darkgrey") +
ggthemes::theme_map()
gridExtra::grid.arrange(
cg +
coord_map() +
labs(title = "Canada's map with coord_map()"),
cg + coord_quickmap() +
labs(title = "Canada's map with coord_quickmap()"),
ncol = 2)
---
title: "Chapter 10"
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty,
y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
?coord_fixed
?geom_abline
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
library(gt)
data("mpg")
data("diamonds")
#| label: fig-q3-ex7
#| fig-cap: "Figure depicting importance of coord_fixed()"
#| code-fold: true
ggplot(data = mpg, mapping = aes(x = cty,
y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
