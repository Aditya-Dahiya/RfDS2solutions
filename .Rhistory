?read_sheet
"https://docs.google.com/spreadsheets/d/1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4" |>
read_sheet() |>
select(1:2)
"https://docs.google.com/spreadsheets/d/1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4" |>
read_sheet() |>
select(1:2) |>
gt::gt()
"https://docs.google.com/spreadsheets/d/1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4" |>
read_sheet() |>
select(1:2) |>
mutate(geom = ifelse(geom == NA, "", geom)) |>
gt::gt()
temp = read_sheet(id = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4") |>
select(1:2)
?read_sheet
temp = read_sheet(ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4") |>
select(1:2)
View(temp)
temp = temp |>
mutate(geom = ifelse(geom == NA, "", geom))
View(temp)
temp = temp |>
mutate(geom = ifelse(geom != NA, "", geom))
temp = read_sheet(ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4") |>
select(1:2)
temp |>
mutate(geom = ifelse(geom != NA, "", geom))
is.na(geom)
is.na(temp$geom)
gt(temp)
temp |>
gt()
library(gt)
temp |>
gt()
temp |>
gt() |>
fmt_missing(missing_text = "")
?read_sheet
temp = read_sheet(
ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4",
col_names = c("geom", "stat")) |>
select(1:2)
library(gt)
temp |>
gt() |>
fmt_missing(missing_text = "")
temp = read_sheet(
ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4",
col_names = c("geom", "stat", "a", "b", "c")) |>
select(1:2)
library(gt)
temp |>
gt() |>
fmt_missing(missing_text = "")
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(subtitle = "List of geom - stat pairs in ggplot2")
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(title = "List of geom - stat pairs in ggplot2")
temp = read_sheet(
ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4",
col_names = c("geom", "stat", "a", "b", "c"),
skip = 1) |>
select(1:2)
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(title = "List of geom - stat pairs in ggplot2")
library(googlesheets4)
library(gt)
temp = read_sheet(
ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4",
col_names = c("geom", "stat", "a", "b", "c"),
skip = 1) |>
select(1:2)
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(title = "List of geom - stat pairs in ggplot2")
library(googlesheets4)
library(gt)
temp = read_sheet(
ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4",
col_names = c("geom", "stat", "a", "b", "c"),
skip = 1) |>
select(1:2)
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(title = md("List of `geom` - `stat` pairs in `ggplot2`"))
library(googlesheets4)
library(gt)
temp = read_sheet(
ss = "1OJkZQyzaEp_hMO0bUZuyqWx5Cw1r4d-MLNDZFDSCBX4",
col_names = c("geom", "stat", "a", "b", "c"),
skip = 1) |>
select(1:2)
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(title = md("List of `geom` - `stat` pairs in `ggplot2`")) |>
tab_source_note(source_note = md("From the webpage <http://sape.inf.usi.ch/quick-reference/ggplot2/geom>"))
temp |>
gt() |>
fmt_missing(missing_text = "") |>
tab_header(title = md("List of `geom` - `stat` pairs in `ggplot2`")) |>
tab_source_note(source_note = md("From the webpage <http://sape.inf.usi.ch/quick-reference/ggplot2/geom>")) |>
gtExtras::gt_theme_538()
View(temp)
?geom_line
?geom_pointrange
?geom_bar
geom_col
?geom_col
?stat_smooth
#| label: fig-q1-ex1
#| fig-cap: "Question 1: Scatterplot of hwy vs. displ"
#| message: false
#| error: false
#| warning: false
mpg |>
ggplot(aes(x = hwy, y = displ)) +
geom_point(shape = 24, fill = "pink") +
theme_bw()
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
data("mpg")
data("diamonds")
?geom_abline
?geom_area
?stat_align
?geom_bin_2d
?geom_tile
?geom_bin_2d
?geom_boxplot
?geom_map
?geom_qq_line
?stat_smooth
ggplot(diamonds, aes(x = cut,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
y = after_stat(prop),)) +
geom_bar()
ggplot(diamonds, aes(x = cut,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = color)) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = color)) +
geom_line()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = color)) +
geom_bar()
?after_stat
?prop
ggplot(diamonds, aes(x = cut,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = color)) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = color)) +
geom_bar()
diamonds |>
group_by(cut, color) |>
count()
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
fill = color)) +
geom_col()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = c(color, cut))) +
geom_bar()
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
fill = color)) +
geom_col()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
y = after_stat(prop))) +
geom_bar()
diamonds |>
group_by(cut) |>
count() |>
ggplot(aes(x = cut,
y = n)) +
geom_col()
ggplot(diamonds, aes(x = cut,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
y = after_stat(prop),
group = 1)) +
geom_bar() +
labs(title = md("Using `group = 1` argument within `aes()`"))
?md
library(gt)
ggplot(diamonds, aes(x = cut,
y = after_stat(prop),
group = 1)) +
geom_bar() +
labs(title = md("Using `group = 1` argument within `aes()`"))
md("Using `group = 1` argument within `aes()`")
#| label: fig-q5-ex5
#| fig-cap: "Use of group=1 in plot to resolve calculation error"
gridExtra::grid.arrange(
ggplot(diamonds,
aes(x = cut,
y = after_stat(prop))) +
geom_bar() +
labs(title = "Without using any grouping argument"),
ggplot(diamonds,
aes(x = cut,
y = after_stat(prop),
group = 1)) +
geom_bar() +
labs(title = "Using group = 1 argument within aes()"),
ncol = 2)
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop),
group = 1)) +
geom_bar() +
labs(title = "Plot produced by faulty code")
ggplot(diamonds, aes(x = cut,
fill = color,
group = 1,
y = after_stat(prop))) +
geom_bar() +
labs(title = "Plot produced by faulty code")
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar(aes(group = 1)) +
labs(title = "Plot produced by faulty code")
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar(aes(group = color)) +
labs(title = "Plot produced by faulty code")
ggplot(diamonds, aes(x = cut,
fill = color,
y = after_stat(prop))) +
geom_bar(aes(group = cut)) +
labs(title = "Plot produced by faulty code")
diamonds |>
group_by(cut) |>
count() |>
ggplot(aes(x = cut,
y = n)) +
geom_bar(stat = "identity")
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
color = color)) +
geom_bar(stat = "identity")
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
fill = color)) +
geom_bar(stat = "identity")
diamonds |>
group_by(cut, color) |>
count() |>
ggplot(aes(x = cut,
y = n,
fill = color)) +
geom_bar(stat = "identity") +
labs(title = "Plot produced by tidyverse method to resolve issue")
# Create a grouped bar plot with correct proportions
ggplot(diamonds, aes(x = cut, fill = color)) +
geom_bar(position = "fill") +  # Use position = "fill" to represent proportions
ylab("Proportion") +  # Label for y-axis
scale_y_continuous(labels = scales::percent_format(scale = 1))  # Convert y-axis labels to percentages
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar()
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "fill")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "dodge")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = NULL)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar()
?geom_bar
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "stack")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "idenity")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity", alph = 0.2)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity", alpha = 0.2)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "identity", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "identity", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "stack", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "fill", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "identity", fill = NA)
ggplot(mpg, aes(x = drv,
fill = class,
color = class)) +
geom_bar(position = "dodge", fill = NA)
?position_fill
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
mpg |>
group_by(cty, hwy) |>
count() |>
arrange(desc(n))
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
mpg |>
group_by(cty, hwy) |>
count() |>
nrow()
nrow(mpg)
gridExtra::grid.arrange(
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point() +
labs(subtitle = "Faulty code: Overplotting"),
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter") +
labs(subtitle = "Problem resolved using position = \"jitter\" in geom_point()")
)
gridExtra::grid.arrange(
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point() +
labs(subtitle = "Faulty code: Overplotting"),
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point(position = "jitter") +
labs(subtitle = "Problem resolved by position = \"jitter\""),
ncol = 2
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(position = "identity")
?geom_point
?geom_jitter
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic()
#| label: fig-q3-ex6
#| fig-cap: "Use of arguments to control jittering in scatterplots"
g = ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic()
g + geom_point()
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 2, height = 2) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.2, height = 0.2) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.7, height = 0.7) +
labs(title = "geom_jitter()")
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 0.2, height = 0.2) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.7, height = 0.7) +
labs(title = "geom_jitter()")
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 0.2, height = 1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 1, height = 0.2) +
labs(title = "geom_jitter()")
#| label: fig-q3-ex6
#| fig-cap: "Use of arguments to control jittering in scatterplots"
g = ggplot(mpg, aes(x = displ, y = hwy)) +
theme_classic() +
labs(x = NULL, y = NULL)
g + geom_point() + labs(title = "geom_point()")
g + geom_jitter() + labs(title = "geom_jitter()")
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "geom_jitter()")
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "geom_jitter()")
g + geom_point() + labs(title = "geom_point()")
gridExtra::grid.arrange(
g + geom_point() +
labs(title = "geom_point()"),
g + geom_jitter() +
labs(title = "geom_jitter()"),
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "jitter width = 0.1, height = 1"),
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "jitter width = 1, height = 0.1"),
ncol = 2,
nrow = 2)
g +
geom_point(color = "lightblue") +
geom_jitter(color = "darkblue") +
geom_jitter(width = 0.1, height = 1, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
g +
geom_point(color = "lightblue") +
geom_jitter(color = "darkblue") +
geom_jitter(width = 0.1, height = 2, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
g +
geom_point(color = "lightblue") +
geom_jitter(width = 0.1, height = 2, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
g +
geom_point(color = "black") +
geom_jitter(width = 0.1, height = 2, color = "red") +
geom_jitter(width = 1, height = 0.1, color = "green")
gridExtra::grid.arrange(
g + geom_point() +
labs(title = "geom_point()"),
g + geom_jitter() +
labs(title = "geom_jitter()"),
g + geom_jitter(width = 0.1, height = 1) +
labs(title = "jitter width = 0.1, height = 1"),
g + geom_jitter(width = 1, height = 0.1) +
labs(title = "jitter width = 1, height = 0.1"),
ncol = 2,
nrow = 2)
?geom_count()
g + geom_count()
?grid.arrange
gridExtra::grid.arrange(
g +
geom_count() +
labs(title = "geom_count()"),
g +
geom_jitter() +
labs(title = "geom_jitter()"),
ncol = 2
)
