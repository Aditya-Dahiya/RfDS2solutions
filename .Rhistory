pivot_longer(cols = -weekday,
names_to = "indicator",
values_to = "val") |>
ggplot(aes(y = weekday, x = val, fill = indicator)) +
geom_bar(stat = "identity") +
geom_vline(xintercept = 0) +
facet_grid(~ indicator, scales = "free_x",
labeller = labeller(indicator = labels_grid)) +
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(legend.position = "none")
flights |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100,
dep_time %% 100),
weekday = wday(dep_time, label = TRUE, abbr = FALSE)
) |>
group_by(weekday) |>
summarise(
mean_delay = mean(dep_delay, na.rm = TRUE),
median_delay = median(dep_delay, na.rm = TRUE),
numbers = n()
) |>
drop_na() |>
pivot_longer(cols = -weekday,
names_to = "indicator",
values_to = "val") |>
ggplot(aes(y = weekday, x = val, fill = indicator)) +
geom_bar(stat = "identity") +
geom_vline(xintercept = 0) +
facet_grid(~ indicator, scales = "free_x",
labeller = labeller(indicator = labels_grid)) +
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(legend.position = "none") +
scale_fill_brewer(palette = "Dark2")
data("diamonds")
hist(diamonds$carat)
flights
f5 = flights |>
select(hour, minute, sched_dep_time, dep_time)
flights |>
select(hour, minute, sched_dep_time, dep_time)
f5 = flights |>
mutate(sched_dep_time = hour + minute/60)
hist(f5$sched_dep_time)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bindwidth = 0.1)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bindwidth = 0.01)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 100)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 1000)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 200)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 500)
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 500) +
coord_cartesian(xlim = c(0, 3)) +
theme_minimal()
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 500) +
coord_cartesian(xlim = c(0, 3)) +
theme_minimal() +
labs(x = "Carat of Diamond", y = "Number of Diamonds",
title = "Carats of diamonds are mostly in multiples of 0.5",
subtitle = "This suggests observer bias in propensity to round off carat to nearest 0.5") +
scale_x_continuous(breaks = seq(0, 3, 0.5))
diamonds |>
ggplot(aes(x = carat)) +
geom_histogram(bins = 500) +
coord_cartesian(xlim = c(0, 3)) +
theme_minimal() +
labs(x = "Carat of Diamond", y = "Number of Diamonds",
title = "Carats of diamonds are mostly in multiples of 0.5",
subtitle = "This suggests observations recorders' bias in propensity to round off carat to nearest 0.5") +
scale_x_continuous(breaks = seq(0, 3, 0.5))
f5 = flights |>
mutate(sched_dep_time = hour + minute/60)
f5 |>
ggplot(aes(sched_dep_time)) +
geom_histogram(bins = 1000)
f5 |>
ggplot(aes(sched_dep_time)) +
geom_histogram(bins = 1000) +
coord_cartesian(xlim = c(5, 24)) +
theme_minimal() +
labs(x = "Scheduled departure time (in hr)",
y = "Number of Flights",
title = "Scheduled Departure times are geenrally in multiples of 5 minutes",
subtitle = "This suggests propensity to round off scheduled departure time to nearest 5 min") +
scale_x_continuous(breaks = seq(5, 24, 1))
f5 |>
ggplot(aes(sched_dep_time)) +
geom_histogram(bins = 1000) +
coord_cartesian(xlim = c(5, 24)) +
theme_minimal() +
labs(x = "Scheduled departure time (in hr)",
y = "Number of Flights",
title = "Scheduled Departure times are geenrally in multiples of 5, 30 or 60 minutes",
subtitle = "This suggests propensity to round off scheduled departure time to nearest hour, or atleast 5 minutes") +
scale_x_continuous(breaks = seq(5, 24, 1))
#| label: setup
library(tidyverse)
library(nycflights13)
library(lubridate)
data("flights")
library(gt)
library(gtExtras)
flights |>
select(hour, minute, sched_dep_time)
flights |>
mutate(
sdt_20_30 = (minute >= 20 & minute <= 30),
sdt_50_60 = (minute >= 50 & minute <= 60),
sdt_round_times = (sdt_20_30 | sdt_50_60),
was_delayed = (dep_delay < 0),
.keep = "used"
)
f7 = flights |>
mutate(
sdt_20_30 = (minute >= 20 & minute <= 30),
sdt_50_60 = (minute >= 50 & minute <= 60),
sdt_round_times = (sdt_20_30 | sdt_50_60),
was_delayed = (dep_delay < 0),
.keep = "used"
)
f7 |>
group_by(sdt_round_times) |>
summarise(prop_delayed = mean(was_delayed, na.rm = TRUE))
f7 = flights |>
mutate(
sdt_20_30 = (minute >= 20 & minute <= 30),
sdt_50_60 = (minute >= 50 & minute <= 60),
sdt_round_times = (sdt_20_30 | sdt_50_60),
was_delayed = (dep_delay < 0),
nos = n()
.keep = "used"
f7 = flights |>
mutate(
sdt_20_30 = (minute >= 20 & minute <= 30),
sdt_50_60 = (minute >= 50 & minute <= 60),
sdt_round_times = (sdt_20_30 | sdt_50_60),
was_delayed = (dep_delay < 0),
.keep = "used"
)
f7 |>
group_by(sdt_round_times) |>
summarise(prop_delayed = mean(was_delayed, na.rm = TRUE),
n = n())
f7
f7 |>
group_by(sdt_round_times) |>
summarise(prop_delayed = mean(was_delayed, na.rm = TRUE),
n = n())
?prop.test
f8 = f7 |>
group_by(sdt_round_times) |>
summarise(prop_delayed = mean(was_delayed, na.rm = TRUE),
n = n())
f8
f8[1,2]*f8[1,3]
prop.test(
x = c(f8[1,2]*f8[1,3], f8[2,2]*f8[2,3]),
n = c(f8[1,3], f[2,3])
)
prop.test(
x = c(f8[1,2]*f8[1,3], f8[2,2]*f8[2,3]),
n = c(f8[1,3], f8[2,3])
)
f8[1,2]
f8[1,3]
f8[2,2]*f8[2,3]
f8[1,2]*f8[1,3]
f8[2,3]
f8[1,3]
f8[1,2]*f8[1,3]
f8[1,3]
f8[2,2]*f8[2,3]
f8[2,3]
prop.test(
x = c(f8[1,2]*f8[1,3], f8[2,2]*f8[2,3]),
n = c(f8[1,3], f8[2,3])
)
f8[2,2]*f8[2,3]
f8[2,3]
f8[1,3]
prop.test(
x = c(113092, 75098),
n = c(197298, 139478)
)
f7 |>
group_by(sdt_round_times) |>
summarise(prop_delayed = mean(was_delayed, na.rm = TRUE),
n = n())
f8test = prop.test(
x = c(113092, 75098),
n = c(197298, 139478)
)
f8test
f8test$p.value
f8test
f7 |>
group_by(sdt_round_times) |>
summarise(prop_delayed = mean(was_delayed, na.rm = TRUE),
n = n())
f8test
date1 = ymd("2023-09-23")
library(tidyverse)
library(lubridate)
#| label: setup
library(tidyverse)
library(nycflights13)
library(lubridate)
data("flights")
library(gt)
library(gtExtras)
seq(from = ymd("2015-01-01"),
to   = ymd("2015-12-31"),
by   = "1 month")
seq(from = ymd(paste0(year(today()), "-01-01")),
to   = ymd(paste0(year(today()), "-12-31")),
by   = "1 month")
today() - ymd("1987-12-22")
today() - ymd("1987-12-22") |>
as.duration()
as.duration(today() - ymd("1987-12-22"))
years(today() - ymd("1987-12-22"))
(today() - ymd("1987-12-22"))
?function
?function
years(today()) - years(ymd(birthday))
find_age = function(birthday){
print(years(today()) - years(ymd(birthday)))
}
find_age("1987-12-22")
(today() - ymd("1987-12-22"))
class(today() - ymd("1987-12-22"))
years(today())
year(today())
print(year(today()) - year(ymd(birthday)))
find_age = function(birthday){
print(year(today()) - year(ymd(birthday)))
}
find_age("1987-12-22")
interval(today() - parse_date("1987-12-22"))
interval(today() - parse_date("1987-12-22"))
today()
parse_date("1987-12-22")
(today() - parse_date("1987-12-22"))
?interval
interval(parse_date("1987-12-22"), today())
(interval(parse_date("1987-12-22"), today()))/years(1)
?round
floor(interval(parse_date("1987-12-22"), today()))/years(1)
as.integer(interval(parse_date("1987-12-22"), today()))/years(1)
as.integer(interval(parse_date("1987-12-22"), today()))/years(1)
(interval(parse_date("1987-12-22"), today()))/years(1)
class(interval(parse_date("1987-12-22"), today()))/years(1)
class(interval(parse_date("1987-12-22"), today()))/years(1)
((interval(parse_date("1987-12-22"), today()))/years(1))
class((interval(parse_date("1987-12-22"), today()))/years(1))
floor((interval(parse_date("1987-12-22"), today()))/years(1))
floor((interval(parse_date("1987-12-22"), today()))/years(1))
as.integer((interval(parse_date("1987-12-22"), today()))/years(1))
?as.integer
floor((interval(parse_date("1987-12-22"), today()))/years(1))
find_age = function(birthday){
age = floor((interval(parse_date("1987-12-22"), today()))/years(1))
print0("You are ", age, " years old.")
}
find_age("1987-12-22")
find_age = function(birthday){
age = floor((interval(parse_date("1987-12-22"), today()))/years(1))
print("You are ", age, " years old.")
}
find_age("1987-12-22")
find_age("1987-12-22")
find_age = function(birthday){
age = floor((interval(parse_date(birthday), today()))/years(1))
print("You are ", age, " years old.")
}
find_age = function(birthday){
age = floor((interval(parse_date(birthday), today()))/years(1))
print("You are ", age, " years old.")
}
find_age("1987-12-22")
find_age = function(birthday){
age = floor((interval(parse_date(birthday), today()))/years(1))
print("You are ", age, " years old.")
}
find_age("1987-12-22")
find_age = function(birthday){
age = floor((interval(parse_date(birthday), today()))/years(1))
cat("You are ", age, " years old.")
}
find_age("1987-12-22")
find_age = function(birthday){
age = floor((interval(parse_date(birthday), today()))/years(1))
cat("You are", age, "years old.")
}
find_age("1987-12-22")
find_age = function(birthday){
age = floor((interval(parse_date(birthday), today()))/years(1))
cat("You are", age, "years old.")
}
find_age("1991-9-22")
find_age("1991-09-22")
find_age("1991-09-24")
months(1)
(today() %--% (today() + years(1)))
(today() %--% (today() + years(1))) / months(1)
(today() %--% (today() + years(1))) / months(1)
#| label: setup
library(tidyverse)
library(nycflights13)
library(lubridate)
data("flights")
library(gt)
library(gtExtras)
#| label: setup
library(tidyverse)
library(nycflights13)
library(lubridate)
data("flights")
library(gt)
library(gtExtras)
#| label: tbl-q3-ex3
#| tbl-cap: "The air_time variable and caculated difference between departure and arrival times don't match if we dont account for time zones"
#| code-fold: true
f3 = flights |>
select(-hour, -minute, -time_hour) |>
filter(!is.na(dep_time) & !is.na(arr_time) & !is.na(air_time)) |>
mutate(
dep_time = make_datetime(year, month, day, dep_time %/% 100, dep_time %% 100),
sched_dep_time = make_datetime(year, month, day, sched_dep_time %/% 100, sched_dep_time %% 100),
dep_time = if_else(dep_time < sched_dep_time - minutes(45),
true = dep_time + days(1),
false = dep_time),
arr_time = make_datetime(year, month, day, arr_time %/% 100, arr_time %% 100),
sched_arr_time = make_datetime(year, month, day, sched_arr_time %/% 100, sched_arr_time %% 100),
air_time_calc = (arr_time - dep_time),
comparison = air_time_calc == air_time
)
f3 |>
select(c(dep_time,
sched_dep_time,
arr_time,
sched_arr_time,
origin,
dest,
air_time,
air_time_calc,
comparison)) |>
slice(200:205) |>
gt() |>
gt_theme_nytimes() |>
tab_style(
style = list(cell_text(weight = "bold")),
locations = cells_body(columns = comparison)
)
mean(f3$comparison) * 100
#| label: tbl-q3a-ex3
#| tbl-cap: "Comparative table of calculated flight times with air_time"
#| code-fold: true
#| eval: false
#########################################################################################
# Load data from airports which contains their time zones
data("airports")
# Left join the data set
flights_airports = left_join(flights, airports, by = join_by(dest == faa)) |>
select(-hour, -minute, -time_hour, -carrier, -tailnum, -lat, -lon, -alt) |>
filter(!is.na(dep_time) & !is.na(arr_time) & !is.na(air_time))
f4 = flights_airports |>
select(year, month, day, dep_time, sched_dep_time, dep_delay,
arr_time, sched_arr_time, arr_delay,
flight, origin, dest,air_time, distance, name, tzone) |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone),
air_time_calc = interval(dep_time, arr_time)
)
f4 |>
select(-c(year, month, day)) |>
slice(201:205)
f4 |>
select(-c(year, month, day)) |>
slice(201:205) |>
View()
f4 = flights_airports |>
select(year, month, day, dep_time, sched_dep_time, dep_delay,
arr_time, sched_arr_time, arr_delay,
flight, origin, dest,air_time, distance, name, tzone) |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone),
air_time_calc = interval(dep_time, arr_time)/minutes(1)
)
f4 = flights_airports |>
slice(201:205) |>
select(year, month, day, dep_time, sched_dep_time, dep_delay,
arr_time, sched_arr_time, arr_delay,
flight, origin, dest,air_time, distance, name, tzone) |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone),
air_time_calc = interval(dep_time, arr_time)/minutes(1)
)
f4
f4 |>
select(-c(year, month, day)) |>
View()
f4 |>
select(-c(year, month, day)) |>
View()
f4 = flights_airports |>
slice(201:205) |>
select(year, month, day, dep_time, sched_dep_time, dep_delay,
arr_time, sched_arr_time, arr_delay,
flight, origin, dest,air_time, distance, name, tzone) |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone),
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4
f4
f4 |>
select(-c(year, month, day)) |>
View()
f4 = flights_airports |>
select(year, month, day, dep_time, sched_dep_time, dep_delay,
arr_time, sched_arr_time, arr_delay,
flight, origin, dest,air_time, distance, name, tzone) |>
mutate(
dep_time = make_datetime(year, month, day,
dep_time %/% 100, dep_time %% 100,
tz = "America/New_York"),
arr_time = make_datetime(year, month, day,
arr_time %/% 100, arr_time %% 100,
tz = tzone)
)
f4 |>
slice(201)
f4 |>
slice(201) |>
View()
f4 |>
slice(201) |>
View()
f4 |>
mutate(
air_time = air_time,
air_time_calc = interval(dep_time, arr_time)/minutes(1)
)
f4 |>
mutate(
air_time = air_time,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4 |>
slice(201) |>
mutate(
air_time = air_time,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4 |>
slice(201) |>
mutate(
air_time = air_time,
tzone = tzone,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
f4 |>
slice(202) |>
mutate(
air_time = air_time,
tzone = tzone,
air_time_calc = interval(dep_time, arr_time)/minutes(1),
.keep = "used"
)
