theme(plot.title.position = "panel",
legend.position = "bottom")
df
df |>
group_by(class, status) |>
count()
df |>
group_by(class, status) |>
count() |>
uncount(weights = n)
df |>
group_by(class, status) |>
count()
df |>
group_by(class, status) |>
count() |>
group_by(class)
df |>
group_by(class, status) |>
count() |>
group_by(class) |>
mutate(total = sum(n))
df |>
group_by(class, status) |>
count() |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
arrange(desc(prop))
df |>
group_by(class, status) |>
count() |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 5) |>
arrange(desc(prop))
df |>
group_by(class, status) |>
count() |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 5) |>
arrange(desc(prop)) |>
drop_na()
df |>
group_by(class, status)
?count
df |>
group_by(class, status) |>
count(wt = numbers)
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n))
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype")
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total)
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 5)
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 5) |>
arrange(desc(prop))
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10)
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop))
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na()
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na() |>
select(-status) |>
rename(
type_of_aircraft = class,
n = number_of_prototypes,
total = total_aircraft,
proportion_of_prototypes = prop
) |>
slice_head(n = 10) |>
gt() |>
gt_theme_538()
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na() |>
select(-status) |>
rename(
type_of_aircraft = class,
number_of_prototypes = n,
total_aircraft = total,
proportion_of_prototypes = prop
) |>
slice_head(n = 10) |>
gt() |>
gt_theme_538()
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na() |>
select(-status) |>
ungroup() |>
rename(
type_of_aircraft = class,
number_of_prototypes = n,
total_aircraft = total,
proportion_of_prototypes = prop
) |>
slice_head(n = 10) |>
gt() |>
gt_theme_538()
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na() |>
select(-status) |>
ungroup() |>
rename(
type_of_aircraft = class,
number_of_prototypes = n,
total_aircraft = total,
percentage_of_prototypes = prop
) |>
slice_head(n = 10) |>
gt() |>
fmt_percent(columns = percentage_of_prototypes) |>
gt_theme_538()
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na() |>
select(-status) |>
ungroup() |>
rename(
type_of_aircraft = class,
number_of_prototypes = n,
total_aircraft_produced = total,
percentage_of_prototypes = prop
) |>
slice_head(n = 10) |>
gt() |>
cols_label_with(fn = janitor::make_clean_names(., "title")) |>
fmt_percent(columns = percentage_of_prototypes, decimals = 1) |>
gt_theme_538()
df |>
group_by(class, status) |>
count(wt = numbers) |>
group_by(class) |>
mutate(total = sum(n)) |>
filter(status == "Prototype") |>
mutate(prop = n/total) |>
filter(total >= 10) |>
arrange(desc(prop)) |>
drop_na() |>
select(-status) |>
ungroup() |>
rename(
type_of_aircraft = class,
number_of_prototypes = n,
total_aircraft_produced = total,
percentage_of_prototypes = prop
) |>
slice_head(n = 10) |>
gt() |>
cols_label_with(fn = ~ janitor::make_clean_names(., "title")) |>
fmt_percent(columns = percentage_of_prototypes, decimals = 1) |>
gt_theme_538()
df
df |>
mutate(
country = fct(country)
) |>
group_by(year, country) |>
count(wt = numbers,
name = "nos_planes")
df |>
filter(year > 1999) |>
mutate(
country = fct(country)
) |>
group_by(year, country) |>
count(wt = numbers,
name = "nos_planes") |>
# Ungroup so that factor lumping works
ungroup()
df |>
filter(year > 1999) |>
mutate(
country = fct(country)
) |>
group_by(year, country) |>
count(wt = numbers,
name = "nos_planes") |>
# Ungroup so that factor lumping works
ungroup() |>
# Lump into 5 factors for easy display of coloured stacked bar chart
mutate(country = fct_lump_n(country, n = 5, w = nos_planes))
df |>
filter(year > 1999) |>
mutate(
country = fct(country)
) |>
group_by(year, country) |>
count(wt = numbers,
name = "nos_planes") |>
# Ungroup so that factor lumping works
ungroup() |>
# Lump into 5 factors for easy display of coloured stacked bar chart
mutate(country = fct_lump_n(country, n = 5, w = nos_planes)) |>
# Start plotting
ggplot(aes(x = year,
y = nos_planes,
fill = country,
label = country,
text = paste0("Aircrafts produced in the decade: ", nos_planes))
) +
geom_bar(stat = "identity",
position = "stack") +
scale_y_continuous(labels = label_number_si())
#| label: fig-stacked-bar
# A stacked bar chart for country-wise aircraft made in each decade
df |>
mutate(
country = fct(country),
decade = fct(paste0(floor(year / 10) * 10, "s"),
levels = paste0(seq(1910, 2020, by = 10), "s"))
) |>
group_by(decade, country) |>
count(wt = numbers,
name = "nos_planes") |>
# Ungroup so that factor lumping works
ungroup() |>
# Remove 2020s as very few observations; and irrelevant to the message
filter(decade != "2020s") |>
# Lump into 5 factors for easy display of coloured stacked bar chart
mutate(country = fct_lump_n(country, n = 5, w = nos_planes)) |>
# Start plotting
ggplot(aes(x = decade,
y = nos_planes,
fill = country,
label = country,
text = paste0("Aircrafts produced in the decade: ", nos_planes))
) +
geom_bar(stat = "identity",
position = "stack") +
scale_y_continuous(labels = label_number_si()) +
labs(x = NULL,
y = "Number of aircraft",
title = "The World War decades saw maximum aircraft production",
subtitle = "Germany dominated the prodcution in the pre WW-II 1930s\nBut, therafter, US and USSR dominated production right upto the end of cold war in 1980s",
fill = NULL) +
scale_fill_manual(values = c("#bbbfc9",
"red",
"#8491b5",
"#5c6580",
"#576cad",
"#f5f114")) +
guides(fill = guide_legend(nrow = 1)) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid = element_blank(),
plot.title.position = "plot")
df |>
filter(year > 1999) |>
mutate(
country = fct(country)
) |>
group_by(year, country) |>
count(wt = numbers,
name = "nos_planes") |>
# Ungroup so that factor lumping works
ungroup() |>
# Lump into 5 factors for easy display of coloured stacked bar chart
mutate(country = fct_lump_n(country, n = 5, w = nos_planes)) |>
# Start plotting
ggplot(aes(x = year,
y = nos_planes,
fill = country,
label = country,
text = paste0("Aircrafts produced in the decade: ", nos_planes))
) +
geom_bar(stat = "identity",
position = "stack") +
scale_y_continuous(labels = label_number_si()) +
labs(x = NULL,
y = "Number of aircraft",
title = "The World War decades saw maximum aircraft production",
subtitle = "Germany dominated the prodcution in the pre WW-II 1930s\nBut, therafter, US and USSR dominated production right upto the end of cold war in 1980s",
fill = NULL) +
scale_fill_manual(values = c("#bbbfc9",
"red",
"#8491b5",
"#5c6580",
"#576cad",
"#f5f114")) +
guides(fill = guide_legend(nrow = 1)) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid = element_blank(),
plot.title.position = "plot")
#| label: fig-operational-planes
#| fig-cap: "Most produced, and currently operational aircraft"
df |>
filter(status == "Operational") |>
arrange(desc(numbers)) |>
slice_head(n = 10) |>
mutate(type = if_else(type == "McDonnell Douglas F/A-18 Hornet",
"F/A-18 Hornet",
type)) |>
ggplot(aes(x = numbers,
y = reorder(type, numbers),
fill = country)) +
geom_bar(stat = "identity") +
theme_void() +
geom_text(aes(x = 0,
label = type),
hjust = "left") +
geom_text(aes(label = numbers),
hjust = -0.3) +
labs(fill = NULL,
title = "The most produced, and still operational, fighter planes belong to US or USSR",
subtitle = "MiG-21 is most produced craft, outnumbering the next highest by more than twice!")  +
scale_fill_manual(values = c("#f5f584", "lightblue", "#828afa", "#f28374")) +
theme(plot.title.position = "panel",
legend.position = "bottom")
#| label: fig-retired-planes
#| fig-cap: "Most produced aircraft of all time: all of them are retired"
df |>
arrange(desc(numbers)) |>
slice_head(n = 10) |>
ggplot(aes(x = numbers,
y = reorder(type, numbers),
fill = country)) +
geom_bar(stat = "identity") +
theme_void() +
geom_text(aes(x = 0,
label = type),
hjust = "left") +
geom_text(aes(label = scales::comma(numbers)),
hjust = -0.3) +
labs(fill = NULL,
title = "However, the most produced fighter planes ever, are all retired!",
subtitle = "Historically, Germany and UK, mass-produced the planes they no longer use.")  +
scale_fill_manual(values = c("#97979c", "#54b8ff", "#828afa", "#f28374")) +
theme(plot.title.position = "panel",
legend.position = "bottom")
#| label: fig-type-all-time
#| fig-cap: "Number of aircraft, ever produced, by the type or class of aircraft"
df |>
mutate(class = if_else(class == "fighter-bomber",
"Fighter-bomber",
class)) |>
count(class, sort = TRUE, wt = numbers) |>
drop_na() |>
mutate(
class = fct(class),
class = fct_lump_n(class, n = 9, w = n)
) |>
count(class, sort = TRUE, wt = n) |>
ggplot(aes(x = n,
y = fct_rev(class))) +
geom_bar(stat = "identity", fill = "grey") +
theme_void() +
geom_text(aes(x = 0,
label = class),
hjust = "left") +
geom_text(aes(label = scales::comma(n)),
hjust = -0.1) +
labs(fill = NULL,
title = "Fighter-bombers were the most common type of aircraft ever produced!") +
theme(plot.title.position = "panel",
legend.position = "bottom")
df
#| label: fig-complete-data
#| fig-cap: "The complete data on fighter aircraft produced by different countries"
df |>
gt() |>
cols_label_with(fn = ~ janitor::clean_names(., "title")) |>
opt_interactive(page_size_default = 5,
use_highlight = TRUE,
use_resizers = TRUE)
#| label: fig-complete-data
#| fig-cap: "The complete data on fighter aircraft produced by different countries"
df |>
gt() |>
cols_label_with(fn = ~ janitor::make_clean_names(., "title")) |>
opt_interactive(page_size_default = 5,
use_highlight = TRUE,
use_resizers = TRUE)
df
#| label: setup
library(tidyverse)
library(nycflights13)
-Inf == -Inf
Inf == Inf
x = c(1, 4, -56, Inf, -Inf, 10)
if_else(x == -Inf,
0,
x)
rescale01 <- function(x) {
x <- if_else(x == -Inf,
min(x),
x)
x <- if_else(x == Inf,
max(x),
x)
rng <- range(x, na.rm = TRUE)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale01(x)
x
if_else(x == -Inf,
min(x),
x)
?min
rescale01 <- function(x) {
# Replace -Inf with the minimum number (other than -Inf)
min_value <- min(x[is.finite(x)])
x[x == -Inf] <- min_value
# Replace +Inf with the maximum number (other than +Inf)
max_value <- max(x[is.finite(x)])
x[x == Inf] <- max_value
rng <- range(x, na.rm = TRUE)
(x - rng[1]) / (rng[2] - rng[1])
}
rescale01(x)
?is_directory
file.info(x)
?file.info
file.info("about.qmd")
file.access("about.qmd")
file.access("about.qmd", 4)
?file.access
