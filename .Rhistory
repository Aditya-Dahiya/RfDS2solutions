legend.title = element_blank())
gtcars |>
slice_head(n = 3,
by = ctry_origin) |>
ggplot(aes(x = hp,
y = mpg_h,
color = ctry_origin,
label = model)) +
geom_point() +
geom_text_repel(force = 2) +
theme_classic() +
labs(x = "Horse Power",
y = "Miles per Gallon (Highway)") +
theme(legend.position = "bottom",
legend.title = element_blank())
# Copy the code above
dput(gtcars)
gtcars |>
slice_head(n = 3,
by = ctry_origin) |>
dput()
# Then create reprex data set
gtcars |>
slice_head(n = 3,
by = ctry_origin) |>
dput()
gtcars =
structure(list(mfr = c("Ford", "Chevrolet", "Dodge", "Ferrari",
"Ferrari", "Ferrari", "Acura", "Nissan", "Bentley", "Aston Martin",
"Aston Martin", "BMW", "BMW", "BMW"), model = c("GT", "Corvette",
"Viper", "458 Speciale", "458 Spider", "458 Italia", "NSX", "GT-R",
"Continental GT", "DB11", "Rapide S", "6-Series", "i8", "M4"),
year = c(2017, 2016, 2017, 2015, 2015, 2014, 2017, 2016,
2016, 2017, 2016, 2016, 2016, 2016), trim = c("Base Coupe",
"Z06 Coupe", "GT Coupe", "Base Coupe", "Base", "Base Coupe",
"Base Coupe", "Premium Coupe", "V8 Coupe", "Base Coupe",
"Base Sedan", "640 I Coupe", "Mega World Coupe", "Base Coupe"
), bdy_style = c("coupe", "coupe", "coupe", "coupe", "convertible",
"coupe", "coupe", "coupe", "coupe", "coupe", "sedan", "coupe",
"coupe", "coupe"), hp = c(647, 650, 645, 597, 562, 562, 573,
545, 500, 608, 552, 315, 357, 425), hp_rpm = c(6250, 6400,
5000, 9000, 9000, 9000, 6500, 6400, 6000, 6500, 6650, 5800,
5800, 5500), trq = c(550, 650, 600, 398, 398, 398, 476, 436,
487, 516, 465, 330, 420, 406), trq_rpm = c(5900, 3600, 5000,
6000, 6000, 6000, 2000, 3200, 1700, 1500, 5500, 1400, 3700,
1850), mpg_c = c(11, 15, 12, 13, 13, 13, 21, 16, 15, 15,
14, 20, 28, 17), mpg_h = c(18, 22, 19, 17, 17, 17, 22, 22,
25, 21, 21, 30, 29, 24), drivetrain = c("rwd", "rwd", "rwd",
"rwd", "rwd", "rwd", "awd", "awd", "awd", "rwd", "rwd", "rwd",
"awd", "rwd"), trsmn = c("7a", "7m", "6m", "7a", "7a", "7a",
"9a", "6a", "8am", "8am", "8am", "8am", "6am", "6m"), ctry_origin = c("United States",
"United States", "United States", "Italy", "Italy", "Italy",
"Japan", "Japan", "United Kingdom", "United Kingdom", "United Kingdom",
"Germany", "Germany", "Germany"), msrp = c(447000, 88345,
95895, 291744, 263553, 233509, 156000, 101770, 198500, 211195,
205300, 77300, 140700, 65700)), class = c("spec_tbl_df",
"tbl_df", "tbl", "data.frame"), row.names = c(NA, -14L), spec = structure(list(
cols = list(mfr = structure(list(), class = c("collector_character",
"collector")), model = structure(list(), class = c("collector_character",
"collector")), year = structure(list(), class = c("collector_double",
"collector")), trim = structure(list(), class = c("collector_character",
"collector")), bdy_style = structure(list(), class = c("collector_character",
"collector")), hp = structure(list(), class = c("collector_double",
"collector")), hp_rpm = structure(list(), class = c("collector_double",
"collector")), trq = structure(list(), class = c("collector_double",
"collector")), trq_rpm = structure(list(), class = c("collector_double",
"collector")), mpg_c = structure(list(), class = c("collector_double",
"collector")), mpg_h = structure(list(), class = c("collector_double",
"collector")), drivetrain = structure(list(), class = c("collector_character",
"collector")), trsmn = structure(list(), class = c("collector_character",
"collector")), ctry_origin = structure(list(), class = c("collector_character",
"collector")), msrp = structure(list(), class = c("collector_double",
"collector"))), default = structure(list(), class = c("collector_guess",
"collector")), skip = 1), class = "col_spec"))
View(gtcars)
reprex::reprex()
#|label: ggplot2-faulty
#|error: false
#|warning: false
#|message: false
#|eval: false
library(tidyverse)
library(ggrepel)
data("gtcars")
gtcars |>
slice_head(n = 3,
by = ctry_origin) |>
ggplot(aes(x = hp,
y = mpg_h,
color = ctry_origin,
label = model)) +
geom_point() +
geom_text_repel(force = 2) +
theme_classic() +
labs(x = "Horse Power",
y = "Miles per Gallon (Highway)") +
theme(legend.position = "bottom",
legend.title = element_blank())
?gtcars
??gtcars
library(gt)
data("gtcars")
gtcars |>
slice_head(n = 3,
by = ctry_origin) |>
ggplot(aes(x = hp,
y = mpg_h,
color = ctry_origin,
label = model)) +
geom_point() +
geom_text_repel(force = 2) +
theme_classic() +
labs(x = "Horse Power",
y = "Miles per Gallon (Highway)") +
theme(legend.position = "bottom",
legend.title = element_blank())
library(readxl)
library(readxl)
library(tidyverse)
survey_df = read_excel("https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8")
survey_df = tibble(
survey_id = c(1:6),
n_pets = c(0,1,N/A, two, 2)
)
survey_df = tibble(
survey_id = c(1:6),
n_pets = c(0,1,"N/A", "two", 2)
)
?tibble
survey_df = tibble(
survey_id = c(1:6),
n_pets = c(0,1,"N/A", "two", 2, "")
)
survey_df
?read_excel
df = read_excel(survey_df)
survey_df
survey_df |>
write_xlsx("docs/survey.xlsx")
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
survey_df |>
write_xlsx("docs/survey.xlsx")
?read_excel
View(survey_df)
survey_df
read_excel(
path = "docs/survey.xlsx",
col_names = TRUE,
na = c("N/A", "")
)
read_excel(
path = "docs/survey.xlsx",
col_names = TRUE,
col_types = c("text", "text"),
na = c("N/A", "")
)
df = read_excel(
path = "docs/survey.xlsx",
col_names = TRUE,
col_types = c("text", "text"),
na = c("N/A", "")
) |>
mutate(
n_pets = ifelse(n_pets == "two", 2, n_pets),
n_pets = parse_number(n_pets)
)
df
read_excel(
path = "docs/roster.xlsx"
)
?read_excel
read_excel(
path = "docs/roster.xlsx",
fillMergedCells = TRUE
)
library(openxlsx)
read_excel(
path = "docs/roster.xlsx",
fillMergedCells = TRUE
)
read.xlsx(
path = "docs/roster.xlsx",
fillMergedCells = TRUE
)
read.xlsx(
"docs/roster.xlsx",
fillMergedCells = TRUE
)
read.xlsx(
"docs/roster.xlsx",
fillMergedCells = TRUE
) |>
class()
read.xlsx(
"docs/roster.xlsx",
fillMergedCells = TRUE
) |>
as_tibble()
read_excel(
path = "docs/roster.xlsx"
)
# Use readxl package with fill() from tidyr
read_excel(
path = "docs/roster.xlsx"
) |>
fill()
# Use readxl package with fill() from tidyr
read_excel(
path = "docs/roster.xlsx"
) |>
fill(.direction = "down")
# Use readxl package with fill() from tidyr
read_excel(
path = "docs/roster.xlsx"
) |>
fill(.direction = "up")
?fill
# Use readxl package with fill() from tidyr
read_excel(
path = "docs/roster.xlsx"
) |>
fill(group, subgroup)
read_excel(
"docs/sales.xlsx"
)
read_excel(
"docs/sales.xlsx",
skip = 5
)
read_excel(
"docs/sales.xlsx",
skip = 4,
col_names = c("id", "n")
)
#| label: q3a-ex2
sales = read_excel(
"docs/sales.xlsx",
skip = 4,
col_names = c("id", "n")
)
sales
sales |>
mutate(brand = ifelse(str_detect(id, "Brand"), id, NA))
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id),
n = parse_number(n)
) |>
fill(brand)
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id))
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id),
n = parse_number(n)
)
?parse_number
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id),
n = parse_number(n, na = "n")
) |>
fill(brand)
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id)
) |>
fill(brand)
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA)) |>
fill(brand)
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id),
n = parse_number(n, na = "n")) |>
fill(brand)
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id),
n = parse_number(n, na = "n")) |>
fill(brand) |>
drop_na()
sales |>
mutate(
brand = ifelse(str_detect(id, "Brand"), id, NA),
id = parse_number(id),
n = parse_number(n, na = "n")) |>
fill(brand) |>
drop_na() |>
relocate(brand)
bake_sale = tibble(
item = factor(c("brownie", "cupcake", "cookie")),
quantity = c(10, 5, 8)
)
bake_sale
bake_sale |>
write.xlsx("docs/bake_sale.xlsx")
library(googlesheets4)
id = "1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w"
read_sheet(id)
read_sheet(id)
gs4_auth_configure()
read_sheet(id)
rlang::last_trace()
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
#| label: q5-ex2
library(googlesheets4)
id = "1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w"
read_sheet(id)
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
#| label: q5-ex2
library(googlesheets4)
id = "1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w"
read_sheet(id)
read_sheet(id) |>
janitor::clean_names()
read_sheet(id) |>
janitor::clean_names() |>
dput()
raw_data = structure(list(student_id = c(1, 2, 3, 4, 5, 6), full_name = c("Sunil Huffmann",
"Barclay Lynn", "Jayendra Lyne", "Leon Rossini", "Chidiegwu Dunkel",
"Güvenç Attila"), favourite_food = c("Strawberry yoghurt",
"French fries", "N/A", "Anchovies", "Pizza", "Ice cream"), meal_plan = c("Lunch only",
"Lunch only", "Breakfast and lunch", "Lunch only", "Breakfast and lunch",
"Lunch only"), age = list(4, 5, 7, NULL, "five", 6)), class = c("tbl_df",
"tbl", "data.frame"), row.names = c(NA, -6L))
read_sheet(id) |>
dput()
raw_data = structure(list(`Student ID` = c(1, 2, 3, 4, 5, 6), `Full Name` = c("Sunil Huffmann", "Barclay Lynn", "Jayendra Lyne", "Leon Rossini", "Chidiegwu Dunkel","Güvenç Attila"), favourite.food = c("Strawberry yoghurt", "French fries", "N/A", "Anchovies", "Pizza", "Ice cream"), mealPlan = c("Lunch only", "Lunch only", "Breakfast and lunch", "Lunch only", "Breakfast and lunch", "Lunch only"), AGE = list(4, 5, 7, NULL, "five", 6)), class = c("tbl_df", "tbl", "data.frame"), row.names = c(NA, -6L))
View(raw_data)
class(raw_data)
raw_data |>
janitor::clean_names() |>
as_tibble()
read_xls("docs/sales.xlsx")
read_xlsx("docs/sales.xlsx")
#| label: q6-ex2
read_xls("docs/sales.xlsx")
write_xlsx(raw_data, "docs/students.xlsx")
df1 = read_excel("docs/students.xlsx")
library(googlesheets4)
library(googlesheets4)
df2 = read_sheet(id)
df1
df2
df1; df2
df1 == df2
all_equal(df1, df2)
df1 |>
across(class())
class(df1)
class(df1)
sapply(df1, class)
sapply(df1, class)
sapply(df2, class)
sapply(df1, class) == sapply(df2, class)
class(df1$AGE)
class(df2$AGE)
df1 = read_excel("docs/students.xlsx")
library(googlesheets4)
id = "1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w"
# Comparing the types of columns in the two data.frames
sapply(df1, class) == sapply(df2, class)
class(df1$AGE)
class(df2$AGE)
df_xl = read_excel("docs/students.xlsx")
df_gs = read_sheet(id)
# Comparing the types of columns in the two data.frames
sapply(df_xl, class) == sapply(df_gs, class)
class(df_xl$AGE)
class(df_gs$AGE)
df_xl
df_xl
df_gs$AGE
sapply(df_gs$AGE, class())
sapply(df_gs$AGE, class)
read_sheet(
"https://pos.it/r4ds-survey"
)
read_sheet(
"https://pos.it/r4ds-survey",
sheet = "survey"
)
?read_sheet
read_sheet(
ss = "https://pos.it/r4ds-survey",
sheet = "survey"
)
rlang::last_trace()
read_sheet(
ss = "https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8/edit#gid=0",
sheet = "survey"
)
read_sheet(
ss = "https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8/edit#gid=0")
read_sheet(
ss = )
read_sheet(
ss = url_gs,
col_types = c("text", "numeric"))
?read_csv
?read_excel
read_sheet(
ss = url_gs,
col_types = c("text", "numeric"))
read_sheet(
ss = url_gs,
col_types = c("text"))
read_sheet(
ss = url_gs,
col_types = c("t", "n"))
read_sheet(
ss = url_gs,
col_types = c("t"))
url_gs = "https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8/edit#gid=0"
read_sheet(
ss = url_gs,
col_types = c("t"))
read_sheet(
ss = url_gs,
col_types = c("text"))
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
url_gs = "https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8/edit#gid=0"
read_sheet(
ss = url_gs)
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
#| label: setup
#| error: false
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(writexl)
#| label: q1-ex3
df_xl = read_excel("docs/students.xlsx")
library(googlesheets4)
url_id = "1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w"
df_gs = read_sheet(url_id)
#| label: q1-ex3
df_xl = read_excel("docs/students.xlsx")
library(googlesheets4)
url_id = "1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w"
df_gs = read_sheet(url_id)
# Comparing the types of columns in the two data.frames
sapply(df_xl, class) == sapply(df_gs, class)
class(df_xl$AGE)
class(df_gs$AGE)
sapply(df_gs$AGE, class)
url_gs = "https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8/edit#gid=0"
read_sheet(
ss = url_gs)
read_sheet(
ss = url_gs,
col_types = "cd")
url_gs1 = "https://docs.google.com/spreadsheets/d/1LgZ0Bkg9d_NK8uTdP2uHXm07kAlwx8-Ictf8NocebIE/edit#gid=0"
read_sheet(
ss = url_gs1
)
read_sheet(
ss = url_gs1
) |>
fill()
read_sheet(
ss = url_gs1
) |>
fill(group, subgroup)
