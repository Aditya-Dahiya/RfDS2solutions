#| label: setup
#| warning: false
#| error: false
library(tidyverse)
data("mpg")
library(esquisse)
esquisser(mpg)
diamonds
diamonds |> esquisser()
install.packages("ggThemeAssist")
library(tidyverse)
diamonds
data("diamonds")
diamonds |> ggThemeAssist::ggThemeAssistGadget()
diamonds |> esquisse::esquisser()
diamonds %>%
filter(carat >= 0.2 & carat <= 3.8) %>%
ggplot() +
aes(x = carat, y = price) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_classic() +
facet_wrap(vars(cut)) |> ggThemeAssist::ggThemeAssistGadget()
g = diamonds %>%
filter(carat >= 0.2 & carat <= 3.8) %>%
ggplot() +
aes(x = carat, y = price) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
geom_smooth(span = 0.75) +
theme_classic() +
facet_wrap(vars(cut))
ggThemeAssist::ggThemeAssistGadget(g)
g + theme(axis.ticks = element_line(linetype = "blank")) +labs(subtitle = "A subtitle using ggThemeAssist")
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
install.packages("ymlthis")
ymlthis:::launch_yaml_addin()
ymlthis:::launch_yaml_addin()
install.packages("regexplain")
library(regexplain)
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
data("mpg")
mpg
sapply(mpg, class)
diamonds
names(diamonds)
diamonds |>
filter(carat > 3)
diamonds |>
filter(carat > 3) |
ggplot(aes(y = price,
x = carat)) +
geom_point()
diamonds |>
filter(carat > 3) |>
ggplot(aes(y = price,
x = carat)) +
geom_point()
diamonds |>
filter(carat > 2.5) |>
ggplot(aes(y = price,
x = carat)) +
geom_point()
names(diamonds)
diamonds |>
filter(carat > 2.5)
diamonds |>
filter(carat > 2.5)
diamonds |>
filter(carat > 2.5) |>
ggplot(aes(y = price,
x = carat)) +
geom_point() +
facet_wrap(~color)
diamonds |>
filter(carat > 2.5) |>
ggplot(aes(y = price,
x = carat)) +
geom_point() +
facet_wrap(~depth)
facet_wrap(~depth)
g + facet_wrap(~depth)
g = diamonds |>
filter(carat > 2.5) |>
ggplot(aes(y = price,
x = carat)) +
geom_point()
g + facet_wrap(~depth)
g = diamonds |>
filter(carat > 2.5) |>
ggplot(aes(y = price,
x = carat)) +
geom_point() +
theme_minimal()
g + facet_wrap(~depth)
diamonds |>
filter(carat > 2.5)
g + facet_wrap(~price)
#| label: fig-q1-ex4
#| fig-cap-location: top
#| fig-cap: "Faceting on a continuous variable like price results in a useless plot"
data("diamonds")
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
data("mpg")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(~ cyl)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(cyl~)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(cyl~.)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(. ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(. ~ drv)
#| label: fig-q3-ex4
#| fig-cap: "Plots produced by Code in Question 3, Exercise 10.4.1"
#| echo: false
#| message: false
#| error: false
#| layout-ncol: 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(. ~ c
#| label: fig-q3-ex4
#| fig-cap: "Plots produced by Code in Question 3, Exercise 10.4.1"
#| echo: false
#| message: false
#| error: false
#| layout-ncol: 2
ggplot(mpg) +
#| label: fig-q3-ex4
#| fig-cap: "Plots produced by Code in Question 3, Exercise 10.4.1"
#| echo: false
#| message: false
#| error: false
#| layout-ncol: 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
?facet_wrap
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap( ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap( ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap( ~ drv, as.table = TRUE)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap( ~ drv, as.table = FALSE)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap( ~ drv, dir = "v")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap( ~ drv, dir = "h")
ggplot(mpg, aes(x = displ)) +
geom_histogram() +
facet_grid(drv
)
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
data("mpg")
ggplot(mpg, aes(x = displ)) +
geom_histogram() +
facet_grid(drv ~ .)
ggplot(mpg, aes(x = displ)) +
geom_histogram() +
facet_grid(. ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv, dir = "v")
?facet_wrap
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv, dir = "v", labels = "y")
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv, dir = "v", switch = "y")
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv, dir = "v", switch = "x")
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv, dir = "v", switch = "both")
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv, dir = "v", switch = "y")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
#| label: q7-ex4
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~drv,
dir = "v",
strip.position = "right")
library(tidyverse)
data("diamonds")
diamonds
diamonds |>
count(cut)
?count
diamonds |>
count(cut, clarity)
?after_stat
ggplot(diamonds,
aes(x = cut,
y = after_stat(prop),
group = 1)) +
geom_bar()
y = after_stat(prop)) +
ggplot(diamonds,
aes(x = cut,
y = after_stat(prop))) +
geom_bar()
diamonds |>
count(cut) |>
mutate(props = n / sum(n))
diamonds |>
count(cut) |>
mutate(props = n / sum(n)) |>
ggplot(aes(x = cut,
y = props)) +
geom_bar()
diamonds |>
count(cut) |>
mutate(props = n / sum(n)) |>
ggplot(aes(x = cut,
y = props)) +
geom_bar(stat = "identity")
ggplot(diamonds,
aes(x = cut,
y = after_stat(prop),
group = 1)) +
geom_bar()
ggplot(diamonds) +
stat_summary(
aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
?stat_summary
#| label: setup
#| warning: false
#| error: false
library(tidyverse)
data("mpg")
data("diamonds")
?geom_pointrange
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_point()
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_point(alpha = 0.05)
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange()
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(aes(ymin = min(depth),
ymax = max(depth)))
diamonds |>
ggplot(aes(x = cut,
ymax = max(depth),
ymin = min(depth))) +
geom_pointrange()
?lower
?lower
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(aes(ymin = lower,
ymax = upper))
diamonds |>
ggplot(aes(x = cut,
y = depth,
group = cut)) +
geom_pointrange(aes(ymin = lower,
ymax = upper))
df <- data.frame(
trt = factor(c(1, 1, 2, 2)),
resp = c(1, 5, 3, 4),
group = factor(c(1, 2, 1, 2)),
upper = c(1.1, 5.3, 3.3, 4.2),
lower = c(0.8, 4.6, 2.4, 3.6)
)
View(df)
diamonds |>
group_by(cut) |>
summarise(n = n(),
lower = min(depth),
upper = max(depth),
med = median(depth)) |>
ggplot(aes(x = cut)) +
geom_pointrange(aes(ymin = lower,
ymax = upper))
diamonds |>
group_by(cut) |>
summarise(n = n(),
lower = min(depth),
upper = max(depth),
med = median(depth))
?stat_summary
?geom_pointrange
diamonds |>
ggplot() +
stat_summary(aes(x = cut,
y = depth))
diamonds |>
ggplot() +
stat_summary(aes(x = cut,
y = depth),
fun.min = min,
fun.max = max,
fun = median)
?stat_summary
?geom_pointrange
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary")
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "count")
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary")
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary",
fun = c(min, max, median))
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary",
fun = median)
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary",
fun = median)
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary") +
geom
diamonds |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(stat = "summary")
diamonds |>
group_by(cut) |>
mutate(dep_min = min(depth),
dep_max = max(depth)) |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(aes(ymin = dep_min,
yamx = dep_max),
stat = "summary")
diamonds |>
group_by(cut) |>
mutate(dep_min = min(depth),
dep_max = max(depth)) |>
ggplot(aes(x = cut,
y = depth)) +
geom_pointrange(aes(ymin = dep_min,
ymax = dep_max),
stat = "summary")
diamonds |>
group_by(cut) |>
mutate(dep_min = min(depth),
dep_max = max(depth)) |>
ggplot(aes()) +
geom_pointrange(aes(x = cut,
y = depth,
ymin = dep_min,
ymax = dep_max),
stat = "summary")
diamonds |>
group_by(cut) |>
mutate(dep_min = min(depth),
dep_max = max(depth)) |>
ggplot() +
geom_pointrange(aes(x = cut,
y = depth,
ymin = dep_min,
ymax = dep_max),
stat = "summary")
diamonds |>
group_by(cut) |>
mutate(dep_min = min(depth),
dep_max = max(depth)) |>
ggplot() +
geom_pointrange(aes(x = cut,
y = depth,
ymin = dep_min,
ymax = dep_max),
stat = "identity")
diamonds |>
group_by(cut) |>
mutate(dep_min = min(depth),
dep_max = max(depth)) |>
ggplot() +
geom_pointrange(aes(x = cut,
y = median(depth),
ymin = dep_min,
ymax = dep_max),
stat = "identity")
diamonds |>
group_by(cut) |>
summarise(dep = median(depth),
dep_min = min(depth),
dep_max = max(depth))
diamonds |>
group_by(cut) |>
summarise(dep = median(depth),
dep_min = min(depth),
dep_max = max(depth)) |>
ggplot() +
geom_pointrange(aes(x = cut,
y = dep,
ymin = dep_min,
ymax = dep_max),
stat = "identity")
diamonds |>
group_by(cut) |>
summarise(dep = median(depth),
dep_min = min(depth),
dep_max = max(depth)) |>
ggplot() +
geom_pointrange(aes(x = cut,
y = dep,
ymin = dep_min,
ymax = dep_max),
stat = "identity")
diamonds |>
ggplot() +
geom_pointrange(aes(x = cut,
y = median(depth),
ymin = min(depth),
ymax = max(depth)),
stat = "identity")
diamonds |>
ggplot(aes(group = cut)) +
geom_pointrange(aes(x = cut,
y = median(depth),
ymin = min(depth),
ymax = max(depth)),
stat = "identity")
diamonds |>
group_by(cut) |>
ggplot(aes()) +
geom_pointrange(aes(x = cut,
y = median(depth),
ymin = min(depth),
ymax = max(depth)),
stat = "identity")
