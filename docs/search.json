[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Solutions: R for Data Science (2e)",
    "section": "",
    "text": "Author: Aditya Dahiya\nThis website display the worked out solutions for the open source book."
  },
  {
    "objectID": "index.html#solutions-for-the-book-r-for-data-science-2nd-edition",
    "href": "index.html#solutions-for-the-book-r-for-data-science-2nd-edition",
    "title": "Solutions: R for Data Science (2e)",
    "section": "",
    "text": "Author: Aditya Dahiya\nThis website display the worked out solutions for the open source book."
  },
  {
    "objectID": "Chapter29.html",
    "href": "Chapter29.html",
    "title": "Chapter 29: Quarto",
    "section": "",
    "text": "Create a new Quarto document using File &gt; New File &gt; Quarto Document. Read the instructions. Practice running the chunks individually. Then render the document by clicking the appropriate button and then by using the appropriate keyboard short cut. Verify that you can modify the code, re-run it, and see modified output.\n\n\nThe document has been created. Some of the chunks are as follows:\n\n\nlibrary(tidyverse)\n\n\ndiamonds |&gt; \n  filter(carat &gt; 2) |&gt;\n  ggplot(mapping = aes(x=carat, y=price,\n                       color = color)) +\n  geom_point(alpha = 0.5) + \n  #scale_y_continuous(trans = \"log\") +\n  geom_smooth(se=FALSE) + \n  scale_color_brewer(palette = 2)\n\n\n\n\n\nVerifying that the code can be modified and re-run:–\n\n\ndiamonds |&gt; \n  filter(carat &gt; 2) |&gt;\n  filter (carat &lt; 3) |&gt;\n  filter (price &gt; 10000) |&gt;\n  ggplot(mapping = aes(x=carat, y=price,\n                       color = color)) +\n  geom_point(alpha = 0.3) + \n  scale_y_continuous(trans = \"log\") +\n  geom_smooth(se=FALSE) + \n  scale_color_brewer(palette = 4) +\n  theme_minimal() +\n  labs(title = \"Plot of relation between Carat and Price\",\n       subtitle = \"For different colours of diamonds\",\n       y = \"Price (in $)\", x = \"Carat\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nCreate one new Quarto document for each of the three built-in formats: HTML, PDF and Word. Render each of the three documents. How do the outputs differ? How do the inputs differ? (You may need to install LaTeX in order to build the PDF output — RStudio will prompt you if this is necessary.)\n\nThe outputs are different in the following ways:--\n\nThe output text and code are same, but rendering to PDF takes more time than Word. HTML rendering seems to be the fastest.\nPDF and MS Word cannot incorporate interactive graphics, while HTML offers interactivity.\nThe size of the PDF document is the largest, followed by MS Word document, while the HTML uses the least disk space."
  },
  {
    "objectID": "Chapter29.html#nd-level-header",
    "href": "Chapter29.html#nd-level-header",
    "title": "Chapter 29: Quarto",
    "section": "2nd Level Header",
    "text": "2nd Level Header\n\n3rd Level Header"
  },
  {
    "objectID": "Chapter29.html#lists",
    "href": "Chapter29.html#lists",
    "title": "Chapter 29: Quarto",
    "section": "Lists",
    "text": "Lists\n\nBulleted list item 1\nItem 2\n\nItem 2a\nItem 2b\n\n\n\nNumbered list item 1\nItem 2. The numbers are incremented automatically in the output.\n\n\nLinks and Images\nhttps://example.com/\nlinked phrases\n\n\n\nCredits: Nick Tierney’s (mostly) rstats blog\n\n\nTables\n\nMy First Table in Quarto\n\n\nFirst Header\nSecond Header\n\n\n\n\nContent Cell 1.1\nContent Cell 2.1\n\n\nContent Cell 1.2\nContent Cell 2.2\n\n\nContent Cell 1.3\nContent Cell 2.3\n\n\n\n\nUsing the visual editor, insert a code chunk using the Insert menu and then the insert anything tool.\nHere, I am inserting a code chunk using simple the “/” key, and then selecting R-code option:--\n\nprint(\"Hello World\")\n\n[1] \"Hello World\"\n\n\nUsing the visual editor, figure out how to:\n\nAdd a footnote.\nYou can add a foot note by selecting the menu Insert –&gt; Footnote; or, by using Ctrl+Shift+7. Here is an example.1\nAdd a horizontal rule.\nYou can add a foot note by selecting the menu Insert –&gt; Horizontal Rule. Here is an example:--\n\nAdd a block quote.\nYou can add a foot note by selecting the menu Format –&gt; Block quote. Here is how we add a block quote:-\n\nA block quote is a long quote formatted as a separate “block” of text. Instead of using quotation marks, you place the quote on a new line, and indent the entire quote to mark it apart from your own words2\n\n\nIn the visual editor, go to Insert &gt; Citation and insert a citation to the paper titled Welcome to the Tidyverse using its DOI (digital object identifier), which is 10.21105/joss.01686. Render the document and observe how the reference shows up in the document. What change do you observe in the YAML of your document?\n\nLet us first add some text from the paper, so that we can use a citation:---\n\nAt a high level, the tidyverse is a language for solving data science challenges with R code. Its primary goal is to facilitate a conversation between a human and a computer about data. Less abstractly, the tidyverse is a collection of R packages that share a high-level design philosophy and low-level grammar and data structures, so that learning one package makes it easier to learn the next. (Wickham et al. 2019)\n\nOnce we render the document, the citation shows up in the very end of the HTML webpage rendered. It is displayed just above the footnotes. The YAML header of the document, when viewed in the “Source” displays an additional line bibliography: references.bib."
  },
  {
    "objectID": "Chapter29.html#footnotes",
    "href": "Chapter29.html#footnotes",
    "title": "Chapter 29: Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is a sample footnote to answer the Question 3(a) of the 29.3.1 Exercises within the Chapter 29 “Quarto” of the Book “R for Data Science, 2nd Edition” by Wickham, Cetinkaya-Rundel & Grolemund.↩︎\nSource: Scribbr.com. What is a block quote?↩︎\nI use Ctrl + Shift + 7 to create a footnote here.↩︎\nThis is a test footnote I wrote in the Source Editor↩︎"
  },
  {
    "objectID": "solutions.html",
    "href": "solutions.html",
    "title": "Solutions",
    "section": "",
    "text": "Chapter 2 (Data Visualization)\n\n\n\n\n\n\nAditya Dahiya\n\n\nJul 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 29: Quarto\n\n\n\n\n\n\nAditya Dahiya\n\n\nJul 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nChapter 30 (Quarto Formats)\n\n\n\n\n\n\nAditya Dahiya\n\n\nJul 25, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Ch29-6-3-1-3.html",
    "href": "Ch29-6-3-1-3.html",
    "title": "Chapter 29: Exercise 29.6.3.3",
    "section": "",
    "text": "3. Change the size of the figure with the following chunk options, one at a time, render your document, and describe how the figure changes.\n\nHow the figure changes with `fig-width: 6`\n\n\nlibrary(tidyverse)\ndiamonds |&gt;\n  filter(carat &lt;= 2.5) |&gt;\n      ggplot(aes(x = carat)) + \n        geom_freqpoly(binwidth = 0.01) +\n        theme_light() +\n        labs(x=\"Diamond Carat Size\", y = \"Number of Diamonds\")\n\n\n\n\nFigure 1: Plot with width fixed at 10\n\n\n\n\n\nHow the figure changes with `fig-height: 3`\n\n\ndiamonds |&gt;\n  filter(carat &lt;= 2.5) |&gt;\n      ggplot(aes(x = carat)) + \n        geom_freqpoly(binwidth = 0.01) +\n        theme_light() +\n        labs(x=\"Diamond Carat Size\", y = \"Number of Diamonds\")\n\n\n\n\nFigure 2: Plot with height fixed at 10\n\n\n\n\n\nHow the figure changes with `out-width: \"100%\"`\n\n\ndiamonds |&gt;\n  filter(carat &lt;= 2.5) |&gt;\n      ggplot(aes(x = carat)) + \n        geom_freqpoly(binwidth = 0.01) +\n        theme_light() +\n        labs(x=\"Diamond Carat Size\", y = \"Number of Diamonds\")\n\n\n\n\nFigure 3: Plot with output width at 100%\n\n\n\n\n\nHow the figure changes with `out-width: \"20%\"`\n\n\ndiamonds |&gt;\n  filter(carat &lt;= 2.5) |&gt;\n      ggplot(aes(x = carat)) + \n        geom_freqpoly(binwidth = 0.01) +\n        theme_light() +\n        labs(x=\"Diamond Carat Size\", y = \"Number of Diamonds\")\n\n\n\n\nFigure 4: Plot with output width at 20%"
  },
  {
    "objectID": "Chapter2.html",
    "href": "Chapter2.html",
    "title": "Chapter 2 (Data Visualization)",
    "section": "",
    "text": "library(tidyverse)\nlibrary(palmerpenguins)\npenguins = penguins\n\n\n2.2.5 Exercises\n\nHow many rows are in penguins? How many columns?\n\nThe number of rows in penguins data-set is 344 and the number of columns is 8\n\nWhat does the bill_depth_mm variable in the penguins data frame describe? Read the help for ?penguins to find out.\n\nFirst, we find out the names of the variables in the penguins data frame in Table 1.\n\nnames(penguins) |&gt;\n  t() |&gt;\n  as_tibble() |&gt;\n  gt::gt()\n\n\n\n\n\nTable 1:  List of variables in the penguins dataset \n  \n    \n    \n      V1\n      V2\n      V3\n      V4\n      V5\n      V6\n      V7\n      V8\n    \n  \n  \n    species\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n  \n  \n  \n\n\n\n\n# Finding the details of the variables.\n# ?penguins\n\nThe variable name bill_depth_mm depicts “a number denoting bill depth (millimeters)”.[Gorman, Williams, and Fraser (2014)](Horst, Hill, and Gorman 2020)\n\nMake a scatter-plot of bill_depth_mm vs. bill_length_mm. That is, make a scatter-plot with bill_depth_mm on the y-axis and bill_length_mm on the x-axis. Describe the relationship between these two variables.\n\nThe scatter-plot is depicted below.\n\npenguins |&gt;\n  ggplot(mapping = aes(x = bill_length_mm,\n                       y = bill_depth_mm,\n                       col = species)) +\n  geom_point() +\n  geom_smooth(se = FALSE,\n              method = \"lm\") +\n  theme_classic() +\n  labs(x = \"Bill Length (mm)\", y = \"Bill Depth (mm)\")\n\n\n\n\nFigure 1: Scatterplot of relation between Bill Length and Bill Depth\n\n\n\n\nWe now test the correlations, and create a beautiful table using gt (Iannone et al. 2023)and gtExtras packages.(Mock 2022)\n\n# Checking the correlation between the two variables\ntest1 = function(x) {cor.test(x$bill_length_mm, x$bill_depth_mm)$estimate}\n\n# An empty data-frame to collect results\ndf = tibble(Penguins = NA,\n            Correlation = NA,\n            .rows = 4)\n# Finding Correlation by each penguin variety\nfor (y in 1:3) {\n  c = penguins |&gt;\n      filter(species == unique(penguins$species)[y]) |&gt;\n      test1() |&gt;\n      format(digits = 2)\n  df[y,2] = c\n  df[y,1] = unique(penguins$species)[y]\n  }\n# Converting the nature of 1st column from factor to character\ndf$Penguins = as.character(df$Penguins)  \n# Storing the overall correlation\ndf[4,1] = \"Overall\"\ndf[4,2] = penguins |&gt; test1() |&gt; format(digits = 2)\n\n# Displaying the result\ngt::gt(df) |&gt;\n  gt::tab_header(title = \"Correlation Coefficitents\",\n                 subtitle = \"Between Bill Length & Bill Depth amongst   \n                 different penguins\") |&gt;\n  gtExtras::gt_theme_538() |&gt;\n  gtExtras::gt_highlight_rows(rows = 4, fill = \"#d4cecd\")\n\n\n\n\n\nTable 2:  Correlation Table amongst different types of penguins \n  \n    \n      Correlation Coefficitents\n    \n    \n      Between Bill Length & Bill Depth amongst   \n                 different penguins\n    \n    \n      Penguins\n      Correlation\n    \n  \n  \n    Adelie\n0.39\n    Gentoo\n0.64\n    Chinstrap\n0.65\n    Overall\n-0.24\n  \n  \n  \n\n\n\n\n\nThus, we see that the relation is not apparent on a simple scatter plot, but if we plot a different colour for each species, we observe that there is positive correlation between Bill Length and Bill Depth, in all three species. The strongest correlation is amongst Gentoo and Chinstrap penguins.\n\nWhat happens if you make a scatter-plot of species vs. bill_depth_mm? What might be a better choice of geom?\nIf we make a scatter-plot of species vs. bill_depth_mm, the following happens:-\n\npenguins |&gt;\n  ggplot(mapping = aes(x = species,\n                       y = bill_depth_mm)) +\n  geom_point() +\n  theme_bw() +\n  labs(x = \"Species\", y = \"Bill Depth (mm)\")\n\n\n\n\nFigure 2: Scatter plot of species vs. Bill Depth\n\n\n\n\nThis produces an awkward scatter-plot, since the x-axis variable is discrete, and not continuous. A better choice of geom might be a box-plot, which shows that the average Bill Depth (in mm) is lower in Gentoo penguins compared to the other two.\n\npenguins |&gt;\n  ggplot(mapping = aes(x = species,\n                       y = bill_depth_mm)) +\n  geom_boxplot() +\n  theme_bw() +\n  labs(x = \"Species\", y = \"Bill Depth (mm)\")\n\n\n\n\nFigure 3: Box-plot of species vs. Bill Depth\n\n\n\n\nWhy does the following give an error and how would you fix it?\nggplot(data = penguins) +    geom_point()\nThe above code will give an error, because we have only given the data to the ggplot call, but not specified the mapping aesthetics, i.e., the x-axis and y-axis for the scatter plot called by the geom_point() . We can fix the error as follows in Figure 4 :---\n\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nFigure 4: Corrected code to display the plot\n\n\n\n\nWhat does the na.rm argument do in geom_point()? What is the default value of the argument? Create a scatterplot where you successfully use this argument set to TRUE.\nWithin the function geom_point() the na.rm argument can do one of the two things. If it is set to FALSE , as it is by default, then the missing values are removed but the following warning message is displayed:–\nWarning message: \nRemoved 2 rows containing missing values (`geom_point()`)\nBut, if it is set to na.rm = TRUE, then the missing values are silently removed. Here’s the code with na.rm = TRUE to produce Figure 5 :---\n\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm)) +\n  geom_point(na.rm = TRUE)\n\n\n\n\nFigure 5: Corrected code to display the plot with na.rm = TRUE\n\n\n\n\nAdd the following caption to the plot you made in the previous exercise: “Data come from the palmerpenguins package.” Hint: Take a look at the documentation for labs().\nThe caption is added here with the labs function with ggplot function below in (fi?)\n\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm)) +\n  geom_point(na.rm = TRUE) +\n  labs(caption = \"Data come from the palmerpenguins package.\")\n\n\n\n\nFigure 6: Plot with a caption added in ggplot call itself\n\n\n\n\nRecreate the following visualization. What aesthetic should bill_depth_mm be mapped to? And should it be mapped at the global level or at the geom level?\naa\n\n\n\n\n\n\n\nReferences\n\nGorman, Kristen B., Tony D. Williams, and William R. Fraser. 2014. “Ecological Sexual Dimorphism and Environmental Variability Within a Community of Antarctic Penguins (Genus Pygoscelis).” Edited by André Chiaradia. PLoS ONE 9 (3): e90081. https://doi.org/10.1371/journal.pone.0090081.\n\n\nHorst, Allison M, Alison Presmanes Hill, and Kristen B Gorman. 2020. Allisonhorst/Palmerpenguins: V0.1.0. Zenodo. https://doi.org/10.5281/ZENODO.3960218.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, Alexandra Lauer, and JooYoung Seo. 2023. “Gt: Easily Create Presentation-Ready Display Tables.” https://CRAN.R-project.org/package=gt.\n\n\nMock, Thomas. 2022. “gtExtras: Extending ’Gt’ for Beautiful HTML Tables.” https://CRAN.R-project.org/package=gtExtras."
  },
  {
    "objectID": "Chapter30.html",
    "href": "Chapter30.html",
    "title": "Chapter 30 (Quarto Formats)",
    "section": "",
    "text": "library(DT)\nlibrary(tidyverse)\nlibrary(knitr)\n\n\n\nLet us try to create an interactive map in HTML below Figure 1:—̥\n\nlibrary(leaflet)\nleaflet() |&gt;\n  setView(76.801175, 30.761403, zoom = 14) |&gt; \n  addTiles() |&gt;\n  addMarkers(76.801175, 30.761403, \n             popup = \"Haryana Civil Secretariat\")  |&gt;\n  addMarkers(76.803773534,\n             30.752910586,\n             popup = \"Rock Garden\")\n\n\n\n\nFigure 1: A map of Chandigarh, India using Leaflet\n\n\n\n\n\nAn example of using DT for an interactive table is at Figure 2 :---\n\ndiamonds |&gt;\n  filter(carat &gt; 3) |&gt;\n  datatable(colnames = c(\"Carat\", \"Cut\", \"Color\",\n                         \"Clarity\", \"Depth\", \"Table\",\n                         \"Price\", \"X\", \"Y\", \"Z\"),\n            rownames = FALSE)\n\n\n\n\n\nFigure 2: A visually pleasing table produced using DT package"
  },
  {
    "objectID": "Chapter30.html#htmlwidgets",
    "href": "Chapter30.html#htmlwidgets",
    "title": "Chapter 30 (Quarto Formats)",
    "section": "",
    "text": "Let us try to create an interactive map in HTML below Figure 1:—̥\n\nlibrary(leaflet)\nleaflet() |&gt;\n  setView(76.801175, 30.761403, zoom = 14) |&gt; \n  addTiles() |&gt;\n  addMarkers(76.801175, 30.761403, \n             popup = \"Haryana Civil Secretariat\")  |&gt;\n  addMarkers(76.803773534,\n             30.752910586,\n             popup = \"Rock Garden\")\n\n\n\n\nFigure 1: A map of Chandigarh, India using Leaflet\n\n\n\n\n\nAn example of using DT for an interactive table is at Figure 2 :---\n\ndiamonds |&gt;\n  filter(carat &gt; 3) |&gt;\n  datatable(colnames = c(\"Carat\", \"Cut\", \"Color\",\n                         \"Clarity\", \"Depth\", \"Table\",\n                         \"Price\", \"X\", \"Y\", \"Z\"),\n            rownames = FALSE)\n\n\n\n\n\nFigure 2: A visually pleasing table produced using DT package"
  }
]